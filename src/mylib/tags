!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDLIBS	Makefile	/^ADDLIBS = ..\/feat\/kaldi-feat.a ..\/ivector\/kaldi-ivector.a ..\/base\/kaldi-base.a ..\/matrix\/kaldi-matrix.a ..\/gmm\/kaldi-gmm.a \\$/;"	m
ADDLIBS	backup/Makefile	/^ADDLIBS = ..\/feat\/kaldi-feat.a ..\/ivector\/kaldi-ivector.a ..\/base\/kaldi-base.a ..\/matrix\/kaldi-matrix.a ..\/gmm\/kaldi-gmm.a \\$/;"	m
AccStats	backup/my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::AccStats($/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:( const MatrixBase<BaseFloat> &feats, const Posterior &post)
AccStats	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::AccStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
AccStats	backup/my-ivector-extractor.h	/^  void AccStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
AccStats	backup/my-ivector-extractor.h	/^  void AccStats(const MatrixBase<BaseFloat> &feats,$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(const MatrixBase<BaseFloat> &feats, const Posterior &post)
AccStats	my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::AccStats($/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:( const MatrixBase<BaseFloat> &feats, const Posterior &post)
AccStats	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::AccStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
AccStats	my-ivector-extractor.h	/^  void AccStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
AccStats	my-ivector-extractor.h	/^  void AccStats(const MatrixBase<BaseFloat> &feats,$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(const MatrixBase<BaseFloat> &feats, const Posterior &post)
AccStatsForUtterance	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
AccStatsForUtterance	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
AccStatsForUtterance	backup/my-ivector-extractor.h	/^  double AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
AccStatsForUtterance	backup/my-ivector-extractor.h	/^  void AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
AccStatsForUtterance	my-ivector-extractor.cc	/^double IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
AccStatsForUtterance	my-ivector-extractor.cc	/^void IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
AccStatsForUtterance	my-ivector-extractor.h	/^  double AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
AccStatsForUtterance	my-ivector-extractor.h	/^  void AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
Add	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Add(const IvectorExtractorStats &other) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractorStats &other)
Add	backup/my-ivector-extractor.h	/^  void Add(const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
Add	my-ivector-extractor.cc	/^void IvectorExtractorStats::Add(const IvectorExtractorStats &other) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractorStats &other)
Add	my-ivector-extractor.h	/^  void Add(const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
AuxfPerFrame	backup/my-ivector-extractor.h	/^  double AuxfPerFrame() { return tot_auxf_ \/ gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
AuxfPerFrame	my-ivector-extractor.h	/^  double AuxfPerFrame() { return tot_auxf_ \/ gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
CheckDims	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CheckDims(const IvectorExtractor &extractor) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractor &extractor) const
CheckDims	backup/my-ivector-extractor.h	/^  void CheckDims(const IvectorExtractor &extractor) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor) const
CheckDims	my-ivector-extractor.cc	/^void IvectorExtractorStats::CheckDims(const IvectorExtractor &extractor) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractor &extractor) const
CheckDims	my-ivector-extractor.h	/^  void CheckDims(const IvectorExtractor &extractor) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor) const
Clear	backup/pcm-reader.h	/^  void Clear() { t_.Clear(); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
Clear	backup/pcm-reader.h	/^  void Clear() {$/;"	f	class:kaldi::PCMData	access:public	signature:()
Clear	pcm-reader.h	/^  void Clear() { t_.Clear(); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
Clear	pcm-reader.h	/^  void Clear() {$/;"	f	class:kaldi::PCMData	access:public	signature:()
CommitStatsForM	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForM($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForM	backup/my-ivector-extractor.h	/^  void CommitStatsForM(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForM	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForM($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForM	my-ivector-extractor.h	/^  void CommitStatsForM(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForPrior	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForPrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForPrior	backup/my-ivector-extractor.h	/^  void CommitStatsForPrior(const VectorBase<double> &ivec_mean,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForPrior	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForPrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForPrior	my-ivector-extractor.h	/^  void CommitStatsForPrior(const VectorBase<double> &ivec_mean,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForSigma	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForSigma($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForSigma	backup/my-ivector-extractor.h	/^  void CommitStatsForSigma(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForSigma	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForSigma($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForSigma	my-ivector-extractor.h	/^  void CommitStatsForSigma(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForUtterance	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForUtterance	backup/my-ivector-extractor.h	/^  void CommitStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForUtterance	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForUtterance	my-ivector-extractor.h	/^  void CommitStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
CommitStatsForW	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForW($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForW	backup/my-ivector-extractor.h	/^  void CommitStatsForW(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForW	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForW($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForW	my-ivector-extractor.h	/^  void CommitStatsForW(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
CommitStatsForWPoint	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForWPoint($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
CommitStatsForWPoint	backup/my-ivector-extractor.h	/^  void CommitStatsForWPoint(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
CommitStatsForWPoint	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForWPoint($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
CommitStatsForWPoint	my-ivector-extractor.h	/^  void CommitStatsForWPoint(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
ComputeDerivedVars	backup/my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::InitIvectorExtractor	signature:()
ComputeDerivedVars	backup/my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(int32 i)
ComputeDerivedVars	backup/my-init-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:()
ComputeDerivedVars	backup/my-init-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(int32 i)
ComputeDerivedVars	backup/my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::IvectorExtractor	signature:()
ComputeDerivedVars	backup/my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::IvectorExtractor	signature:(int32 i)
ComputeDerivedVars	backup/my-ivector-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:()
ComputeDerivedVars	backup/my-ivector-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(int32 i)
ComputeDerivedVars	my-cuda-ivector-extractor.h	/^		ComputeDerivedVars(int32 i);$/;"	p	class:CudaIE	access:private	signature:(int32 i)
ComputeDerivedVars	my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::InitIvectorExtractor	signature:()
ComputeDerivedVars	my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(int32 i)
ComputeDerivedVars	my-init-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:()
ComputeDerivedVars	my-init-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(int32 i)
ComputeDerivedVars	my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::IvectorExtractor	signature:()
ComputeDerivedVars	my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::IvectorExtractor	signature:(int32 i)
ComputeDerivedVars	my-ivector-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:()
ComputeDerivedVars	my-ivector-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(int32 i)
Copy	backup/pcm-reader.h	/^  void Copy(const T &t) { t_.CopyFrom(t); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const T &t)
Copy	pcm-reader.h	/^  void Copy(const T &t) { t_.CopyFrom(t); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const T &t)
CopyFrom	backup/pcm-reader.h	/^  void CopyFrom(const PCMData &other) {$/;"	f	class:kaldi::PCMData	access:public	signature:(const PCMData &other)
CopyFrom	pcm-reader.h	/^  void CopyFrom(const PCMData &other) {$/;"	f	class:kaldi::PCMData	access:public	signature:(const PCMData &other)
Count	backup/my-ivector-extractor.h	/^  double Count() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
Count	my-ivector-extractor.h	/^  double Count() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
CudaIE	my-cuda-ivector-extractor.h	/^		explicit CudaIE(Matrix<Real> feature, Posterior post) {$/;"	f	class:CudaIE	access:public	signature:(Matrix<Real> feature, Posterior post)
CudaIE	my-cuda-ivector-extractor.h	/^class CudaIE {$/;"	c
CudaIE::ComputeDerivedVars	my-cuda-ivector-extractor.h	/^		ComputeDerivedVars(int32 i);$/;"	p	class:CudaIE	access:private	signature:(int32 i)
CudaIE::CudaIE	my-cuda-ivector-extractor.h	/^		explicit CudaIE(Matrix<Real> feature, Posterior post) {$/;"	f	class:CudaIE	access:public	signature:(Matrix<Real> feature, Posterior post)
CudaIE::M_	my-cuda-ivector-extractor.h	/^		vector<CuMatrix<double> > M_;$/;"	m	class:CudaIE	access:private
CudaIE::Read	my-cuda-ivector-extractor.cc	/^void CudaIE<Real>::Read(std::istream &is, bool binary) {$/;"	f	class:CudaIE	signature:(std::istream &is, bool binary)
CudaIE::Read	my-cuda-ivector-extractor.h	/^		void Read(std::istream &is, bool binary);$/;"	p	class:CudaIE	access:public	signature:(std::istream &is, bool binary)
CudaIE::Sigma_inv_	my-cuda-ivector-extractor.h	/^		vector<CuSpMatrix<double> > Sigma_inv_;$/;"	m	class:CudaIE	access:private
CudaIE::Sigma_inv_M_	my-cuda-ivector-extractor.h	/^		vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:CudaIE	access:private
CudaIE::U_	my-cuda-ivector-extractor.h	/^		CuMatrix<double> U_;$/;"	m	class:CudaIE	access:private
CudaIE::feature_	my-cuda-ivector-extractor.h	/^		Matrix<Real> feature_;$/;"	m	class:CudaIE	access:private
CudaIE::gconsts_	my-cuda-ivector-extractor.h	/^		CuVector<double> gconsts_;$/;"	m	class:CudaIE	access:private
CudaIE::post_	my-cuda-ivector-extractor.h	/^		Posterior post_;$/;"	m	class:CudaIE	access:private
CudaIE::prior_offset_	my-cuda-ivector-extractor.h	/^		double prior_offset_;$/;"	m	class:CudaIE	access:private
CudaIE::w_	my-cuda-ivector-extractor.h	/^		CuMatrix<double> w_;$/;"	m	class:CudaIE	access:private
CudaIE::w_vec_	my-cuda-ivector-extractor.h	/^		CuVector<double> w_vec_;$/;"	m	class:CudaIE	access:private
CudaIE::~CudaIE	my-cuda-ivector-extractor.h	/^		~CudaIE() {}$/;"	f	class:CudaIE	access:public	signature:()
Data	backup/pcm-reader.h	/^  const Matrix<BaseFloat> &Data() const { return data_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
Data	pcm-reader.h	/^  const Matrix<BaseFloat> &Data() const { return data_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
DefaultObjf	backup/my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::DefaultObjf() const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:() const
DefaultObjf	backup/my-ivector-extractor.h	/^  double DefaultObjf() const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:() const
DefaultObjf	my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::DefaultObjf() const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:() const
DefaultObjf	my-ivector-extractor.h	/^  double DefaultObjf() const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:() const
Duration	backup/pcm-reader.h	/^  BaseFloat Duration() const { return data_.NumCols()\/samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
Duration	pcm-reader.h	/^  BaseFloat Duration() const { return data_.NumCols()\/samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
EstimateIvectorsOnline	backup/my-ivector-extractor.cc	/^double EstimateIvectorsOnline($/;"	f	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
EstimateIvectorsOnline	backup/my-ivector-extractor.h	/^double EstimateIvectorsOnline($/;"	p	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
EstimateIvectorsOnline	my-ivector-extractor.cc	/^double EstimateIvectorsOnline($/;"	f	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
EstimateIvectorsOnline	my-ivector-extractor.h	/^double EstimateIvectorsOnline($/;"	p	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
Expect4ByteTag	backup/pcm-reader.cc	/^void PCMData::Expect4ByteTag(std::istream &is, const char *expected) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, const char *expected)
Expect4ByteTag	backup/pcm-reader.h	/^  static void Expect4ByteTag(std::istream &is, const char *expected);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, const char *expected)
Expect4ByteTag	pcm-reader.cc	/^void PCMData::Expect4ByteTag(std::istream &is, const char *expected) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, const char *expected)
Expect4ByteTag	pcm-reader.h	/^  static void Expect4ByteTag(std::istream &is, const char *expected);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, const char *expected)
FeatDim	backup/my-init-extractor.cc	/^int32 InitIvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
FeatDim	backup/my-init-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
FeatDim	backup/my-ivector-extractor.cc	/^int32 IvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
FeatDim	backup/my-ivector-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
FeatDim	my-init-extractor.cc	/^int32 InitIvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
FeatDim	my-init-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
FeatDim	my-ivector-extractor.cc	/^int32 IvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
FeatDim	my-ivector-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
FlushCache	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::FlushCache() {$/;"	f	class:kaldi::IvectorExtractorStats	signature:()
FlushCache	backup/my-ivector-extractor.h	/^  void FlushCache();$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:()
FlushCache	my-ivector-extractor.cc	/^void IvectorExtractorStats::FlushCache() {$/;"	f	class:kaldi::IvectorExtractorStats	signature:()
FlushCache	my-ivector-extractor.h	/^  void FlushCache();$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:()
G_	backup/my-ivector-extractor.h	/^  Matrix<double> G_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
G_	my-ivector-extractor.h	/^  Matrix<double> G_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
GetAcousticAuxf	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAcousticAuxf	backup/my-ivector-extractor.h	/^  double GetAcousticAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetAcousticAuxf	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAcousticAuxf	my-ivector-extractor.h	/^  double GetAcousticAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetAcousticAuxfGconst	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfGconst($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfGconst	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfGconst($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfGconst	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfGconst($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfGconst	my-ivector-extractor.h	/^  double GetAcousticAuxfGconst($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfMean	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAcousticAuxfMean	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetAcousticAuxfMean	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAcousticAuxfMean	my-ivector-extractor.h	/^  double GetAcousticAuxfMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetAcousticAuxfVariance	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfVariance($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfVariance	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfVariance($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfVariance	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfVariance($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfVariance	my-ivector-extractor.h	/^  double GetAcousticAuxfVariance($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
GetAcousticAuxfWeight	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAcousticAuxfWeight	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetAcousticAuxfWeight	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAcousticAuxfWeight	my-ivector-extractor.h	/^  double GetAcousticAuxfWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetAuxf	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	f	class:kaldi::IvectorExtractor	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAuxf	backup/my-ivector-extractor.h	/^  double GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetAuxf	my-ivector-extractor.cc	/^double IvectorExtractor::GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	f	class:kaldi::IvectorExtractor	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetAuxf	my-ivector-extractor.h	/^  double GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetIvector	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::GetIvector($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( int32 num_cg_iters, VectorBase<double> *ivector) const
GetIvector	backup/my-ivector-extractor.h	/^  void GetIvector(int32 num_cg_iters,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 num_cg_iters, VectorBase<double> *ivector) const
GetIvector	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::GetIvector($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( int32 num_cg_iters, VectorBase<double> *ivector) const
GetIvector	my-ivector-extractor.h	/^  void GetIvector(int32 num_cg_iters,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 num_cg_iters, VectorBase<double> *ivector) const
GetIvectorDistMean	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistMean	backup/my-ivector-extractor.h	/^  void GetIvectorDistMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistMean	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistMean	my-ivector-extractor.h	/^  void GetIvectorDistMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistPrior	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistPrior($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistPrior	backup/my-ivector-extractor.h	/^  void GetIvectorDistPrior($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistPrior	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistPrior($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistPrior	my-ivector-extractor.h	/^  void GetIvectorDistPrior($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistWeight	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistWeight	backup/my-ivector-extractor.h	/^  void GetIvectorDistWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistWeight	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistWeight	my-ivector-extractor.h	/^  void GetIvectorDistWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
GetIvectorDistribution	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistribution($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
GetIvectorDistribution	backup/my-ivector-extractor.h	/^  void GetIvectorDistribution($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
GetIvectorDistribution	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistribution($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
GetIvectorDistribution	my-ivector-extractor.h	/^  void GetIvectorDistribution($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
GetLogDetNoFailure	backup/my-ivector-extractor.cc	/^static double GetLogDetNoFailure(const SpMatrix<double> &var) {$/;"	f	namespace:kaldi	signature:(const SpMatrix<double> &var)
GetLogDetNoFailure	my-ivector-extractor.cc	/^static double GetLogDetNoFailure(const SpMatrix<double> &var) {$/;"	f	namespace:kaldi	signature:(const SpMatrix<double> &var)
GetOrthogonalIvectorTransform	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::GetOrthogonalIvectorTransform($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
GetOrthogonalIvectorTransform	backup/my-ivector-extractor.h	/^  void GetOrthogonalIvectorTransform(const SubMatrix<double> &T,$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
GetOrthogonalIvectorTransform	my-ivector-extractor.cc	/^void IvectorExtractorStats::GetOrthogonalIvectorTransform($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
GetOrthogonalIvectorTransform	my-ivector-extractor.h	/^  void GetOrthogonalIvectorTransform(const SubMatrix<double> &T,$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
GetPriorAuxf	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetPriorAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetPriorAuxf	backup/my-ivector-extractor.h	/^  double GetPriorAuxf(const VectorBase<double> &mean,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
GetPriorAuxf	my-ivector-extractor.cc	/^double IvectorExtractor::GetPriorAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const VectorBase<double> &mean, const SpMatrix<double> *var) const
GetPriorAuxf	my-ivector-extractor.h	/^  double GetPriorAuxf(const VectorBase<double> &mean,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
InitIvectorExtractor	backup/my-init-extractor.cc	/^InitIvectorExtractor::InitIvectorExtractor($/;"	f	class:kaldi::InitIvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
InitIvectorExtractor	backup/my-init-extractor.h	/^  InitIvectorExtractor($/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
InitIvectorExtractor	backup/my-init-extractor.h	/^  InitIvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:()
InitIvectorExtractor	backup/my-init-extractor.h	/^class InitIvectorExtractor {$/;"	c	namespace:kaldi
InitIvectorExtractor	my-init-extractor.cc	/^InitIvectorExtractor::InitIvectorExtractor($/;"	f	class:kaldi::InitIvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
InitIvectorExtractor	my-init-extractor.h	/^  InitIvectorExtractor($/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
InitIvectorExtractor	my-init-extractor.h	/^  InitIvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:()
InitIvectorExtractor	my-init-extractor.h	/^class InitIvectorExtractor {$/;"	c	namespace:kaldi
InitIvectorExtractorComputeDerivedVarsClass	backup/my-init-extractor.cc	/^  InitIvectorExtractorComputeDerivedVarsClass(InitIvectorExtractor *extractor,$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:(InitIvectorExtractor *extractor, int32 i)
InitIvectorExtractorComputeDerivedVarsClass	backup/my-init-extractor.cc	/^class InitIvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
InitIvectorExtractorComputeDerivedVarsClass	my-init-extractor.cc	/^  InitIvectorExtractorComputeDerivedVarsClass(InitIvectorExtractor *extractor,$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:(InitIvectorExtractor *extractor, int32 i)
InitIvectorExtractorComputeDerivedVarsClass	my-init-extractor.cc	/^class InitIvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
InvertWithFlooring	backup/my-init-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::InitIvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
InvertWithFlooring	backup/my-ivector-extractor.cc	/^void IvectorExtractor::InvertWithFlooring(const SpMatrix<double> &inverse_var,$/;"	f	class:kaldi::IvectorExtractor	signature:(const SpMatrix<double> &inverse_var, SpMatrix<double> *var)
InvertWithFlooring	backup/my-ivector-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::IvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
InvertWithFlooring	my-init-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::InitIvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
InvertWithFlooring	my-ivector-extractor.cc	/^void IvectorExtractor::InvertWithFlooring(const SpMatrix<double> &inverse_var,$/;"	f	class:kaldi::IvectorExtractor	signature:(const SpMatrix<double> &inverse_var, SpMatrix<double> *var)
InvertWithFlooring	my-ivector-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::IvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
IsReadInBinary	backup/pcm-reader.h	/^  static bool IsReadInBinary() { return true; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
IsReadInBinary	pcm-reader.h	/^  static bool IsReadInBinary() { return true; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
IvectorDependentWeights	backup/my-init-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
IvectorDependentWeights	backup/my-ivector-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
IvectorDependentWeights	my-init-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
IvectorDependentWeights	my-ivector-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
IvectorDim	backup/my-init-extractor.cc	/^int32 InitIvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
IvectorDim	backup/my-init-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
IvectorDim	backup/my-ivector-extractor.cc	/^int32 IvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
IvectorDim	backup/my-ivector-extractor.h	/^  int32 IvectorDim() const { return linear_term_.Dim(); }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
IvectorDim	backup/my-ivector-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
IvectorDim	my-init-extractor.cc	/^int32 InitIvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
IvectorDim	my-init-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
IvectorDim	my-ivector-extractor.cc	/^int32 IvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
IvectorDim	my-ivector-extractor.h	/^  int32 IvectorDim() const { return linear_term_.Dim(); }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
IvectorDim	my-ivector-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
IvectorEstimationOptions	backup/my-ivector-extractor.h	/^  IvectorEstimationOptions(): acoustic_weight(1.0), max_count(0.0) {}$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:()
IvectorEstimationOptions	backup/my-ivector-extractor.h	/^struct IvectorEstimationOptions {$/;"	s	namespace:kaldi
IvectorEstimationOptions	my-ivector-extractor.h	/^  IvectorEstimationOptions(): acoustic_weight(1.0), max_count(0.0) {}$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:()
IvectorEstimationOptions	my-ivector-extractor.h	/^struct IvectorEstimationOptions {$/;"	s	namespace:kaldi
IvectorExtractor	backup/my-ivector-extractor.cc	/^IvectorExtractor::IvectorExtractor($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
IvectorExtractor	backup/my-ivector-extractor.h	/^  IvectorExtractor($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
IvectorExtractor	backup/my-ivector-extractor.h	/^  IvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:()
IvectorExtractor	backup/my-ivector-extractor.h	/^class IvectorExtractor {$/;"	c	namespace:kaldi
IvectorExtractor	my-ivector-extractor.cc	/^IvectorExtractor::IvectorExtractor($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
IvectorExtractor	my-ivector-extractor.h	/^  IvectorExtractor($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
IvectorExtractor	my-ivector-extractor.h	/^  IvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:()
IvectorExtractor	my-ivector-extractor.h	/^class IvectorExtractor {$/;"	c	namespace:kaldi
IvectorExtractorComputeDerivedVarsClass	backup/my-ivector-extractor.cc	/^  IvectorExtractorComputeDerivedVarsClass(IvectorExtractor *extractor,$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:(IvectorExtractor *extractor, int32 i)
IvectorExtractorComputeDerivedVarsClass	backup/my-ivector-extractor.cc	/^class IvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
IvectorExtractorComputeDerivedVarsClass	my-ivector-extractor.cc	/^  IvectorExtractorComputeDerivedVarsClass(IvectorExtractor *extractor,$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:(IvectorExtractor *extractor, int32 i)
IvectorExtractorComputeDerivedVarsClass	my-ivector-extractor.cc	/^class IvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
IvectorExtractorEstimationOptions	backup/my-ivector-extractor.h	/^  IvectorExtractorEstimationOptions(): variance_floor_factor(0.1),$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:()
IvectorExtractorEstimationOptions	backup/my-ivector-extractor.h	/^struct IvectorExtractorEstimationOptions {$/;"	s	namespace:kaldi
IvectorExtractorEstimationOptions	my-ivector-extractor.h	/^  IvectorExtractorEstimationOptions(): variance_floor_factor(0.1),$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:()
IvectorExtractorEstimationOptions	my-ivector-extractor.h	/^struct IvectorExtractorEstimationOptions {$/;"	s	namespace:kaldi
IvectorExtractorOptions	backup/my-ivector-extractor.h	/^  IvectorExtractorOptions(): ivector_dim(400), num_iters(2),$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:()
IvectorExtractorOptions	backup/my-ivector-extractor.h	/^struct IvectorExtractorOptions {$/;"	s	namespace:kaldi
IvectorExtractorOptions	my-ivector-extractor.h	/^  IvectorExtractorOptions(): ivector_dim(400), num_iters(2),$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:()
IvectorExtractorOptions	my-ivector-extractor.h	/^struct IvectorExtractorOptions {$/;"	s	namespace:kaldi
IvectorExtractorStats	backup/my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats ($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorStats &other)
IvectorExtractorStats	backup/my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
IvectorExtractorStats	backup/my-ivector-extractor.h	/^  IvectorExtractorStats(): tot_auxf_(0.0), R_num_cached_(0), num_ivectors_(0) { }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
IvectorExtractorStats	backup/my-ivector-extractor.h	/^  IvectorExtractorStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
IvectorExtractorStats	backup/my-ivector-extractor.h	/^  explicit IvectorExtractorStats (const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
IvectorExtractorStats	backup/my-ivector-extractor.h	/^class IvectorExtractorStats {$/;"	c	namespace:kaldi
IvectorExtractorStats	my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats ($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorStats &other)
IvectorExtractorStats	my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
IvectorExtractorStats	my-ivector-extractor.h	/^  IvectorExtractorStats(): tot_auxf_(0.0), R_num_cached_(0), num_ivectors_(0) { }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
IvectorExtractorStats	my-ivector-extractor.h	/^  IvectorExtractorStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
IvectorExtractorStats	my-ivector-extractor.h	/^  explicit IvectorExtractorStats (const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
IvectorExtractorStats	my-ivector-extractor.h	/^class IvectorExtractorStats {$/;"	c	namespace:kaldi
IvectorExtractorStatsOptions	backup/my-ivector-extractor.h	/^  IvectorExtractorStatsOptions(): update_variances(true),$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:()
IvectorExtractorStatsOptions	backup/my-ivector-extractor.h	/^struct IvectorExtractorStatsOptions {$/;"	s	namespace:kaldi
IvectorExtractorStatsOptions	my-ivector-extractor.h	/^  IvectorExtractorStatsOptions(): update_variances(true),$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:()
IvectorExtractorStatsOptions	my-ivector-extractor.h	/^struct IvectorExtractorStatsOptions {$/;"	s	namespace:kaldi
IvectorExtractorUpdateProjectionClass	backup/my-ivector-extractor.cc	/^  IvectorExtractorUpdateProjectionClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
IvectorExtractorUpdateProjectionClass	backup/my-ivector-extractor.cc	/^class IvectorExtractorUpdateProjectionClass {$/;"	c	namespace:kaldi	file:
IvectorExtractorUpdateProjectionClass	my-ivector-extractor.cc	/^  IvectorExtractorUpdateProjectionClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
IvectorExtractorUpdateProjectionClass	my-ivector-extractor.cc	/^class IvectorExtractorUpdateProjectionClass {$/;"	c	namespace:kaldi	file:
IvectorExtractorUpdateWeightClass	backup/my-ivector-extractor.cc	/^  IvectorExtractorUpdateWeightClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
IvectorExtractorUpdateWeightClass	backup/my-ivector-extractor.cc	/^class IvectorExtractorUpdateWeightClass {$/;"	c	namespace:kaldi	file:
IvectorExtractorUpdateWeightClass	my-ivector-extractor.cc	/^  IvectorExtractorUpdateWeightClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
IvectorExtractorUpdateWeightClass	my-ivector-extractor.cc	/^class IvectorExtractorUpdateWeightClass {$/;"	c	namespace:kaldi	file:
IvectorExtractorUtteranceStats	backup/my-ivector-extractor.h	/^  IvectorExtractorUtteranceStats(int32 num_gauss, int32 feat_dim,$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(int32 num_gauss, int32 feat_dim, bool need_2nd_order_stats)
IvectorExtractorUtteranceStats	backup/my-ivector-extractor.h	/^class IvectorExtractorUtteranceStats {$/;"	c	namespace:kaldi
IvectorExtractorUtteranceStats	my-ivector-extractor.h	/^  IvectorExtractorUtteranceStats(int32 num_gauss, int32 feat_dim,$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(int32 num_gauss, int32 feat_dim, bool need_2nd_order_stats)
IvectorExtractorUtteranceStats	my-ivector-extractor.h	/^class IvectorExtractorUtteranceStats {$/;"	c	namespace:kaldi
IvectorVarianceDiagnostic	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::IvectorVarianceDiagnostic($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor)
IvectorVarianceDiagnostic	backup/my-ivector-extractor.h	/^  void IvectorVarianceDiagnostic(const IvectorExtractor &extractor);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor)
IvectorVarianceDiagnostic	my-ivector-extractor.cc	/^void IvectorExtractorStats::IvectorVarianceDiagnostic($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor)
IvectorVarianceDiagnostic	my-ivector-extractor.h	/^  void IvectorVarianceDiagnostic(const IvectorExtractor &extractor);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor)
KALDI_FEAT_PCM_READER_H_	backup/pcm-reader.h	44;"	d
KALDI_FEAT_PCM_READER_H_	pcm-reader.h	44;"	d
KALDI_IVECTOR_IVECTOR_EXTRACTOR_H_	backup/my-ivector-extractor.h	23;"	d
KALDI_IVECTOR_IVECTOR_EXTRACTOR_H_	my-ivector-extractor.h	23;"	d
LIBNAME	Makefile	/^LIBNAME = mylib$/;"	m
LIBNAME	backup/Makefile	/^LIBNAME = mylib$/;"	m
MY_CUDA_IVECTOR_EXTRACTOR	my-cuda-ivector-extractor.h	14;"	d
MY_INIT_IVECTOR_EXTRACTOR_H_	backup/my-init-extractor.h	23;"	d
MY_INIT_IVECTOR_EXTRACTOR_H_	my-init-extractor.h	23;"	d
M_	backup/my-init-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
M_	backup/my-ivector-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
M_	my-cuda-ivector-extractor.h	/^		vector<CuMatrix<double> > M_;$/;"	m	class:CudaIE	access:private
M_	my-init-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
M_	my-ivector-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
NumFrames	backup/my-ivector-extractor.h	/^  double NumFrames() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
NumFrames	backup/my-ivector-extractor.h	/^  double NumFrames() { return gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:()
NumFrames	my-ivector-extractor.h	/^  double NumFrames() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
NumFrames	my-ivector-extractor.h	/^  double NumFrames() { return gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:()
NumGauss	backup/my-init-extractor.cc	/^int32 InitIvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
NumGauss	backup/my-init-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
NumGauss	backup/my-ivector-extractor.cc	/^int32 IvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
NumGauss	backup/my-ivector-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
NumGauss	my-init-extractor.cc	/^int32 InitIvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
NumGauss	my-init-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
NumGauss	my-ivector-extractor.cc	/^int32 IvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
NumGauss	my-ivector-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
OBJFILES	Makefile	/^OBJFILES = my-init-extractor.o pcm-reader.o my-ivector-extractor.o sre.o$/;"	m
OBJFILES	backup/Makefile	/^OBJFILES = my-init-extractor.o pcm-reader.o my-ivector-extractor.o$/;"	m
Objf	backup/my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::Objf($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
Objf	backup/my-ivector-extractor.h	/^  double Objf(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:(const VectorBase<double> &ivector) const
Objf	my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::Objf($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
Objf	my-ivector-extractor.h	/^  double Objf(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:(const VectorBase<double> &ivector) const
ObjfChange	backup/my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::ObjfChange($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
ObjfChange	backup/my-ivector-extractor.h	/^  double ObjfChange(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const VectorBase<double> &ivector) const
ObjfChange	my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::ObjfChange($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
ObjfChange	my-ivector-extractor.h	/^  double ObjfChange(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const VectorBase<double> &ivector) const
OnlineIvectorEstimationStats	backup/my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const OnlineIvectorEstimationStats &other)
OnlineIvectorEstimationStats	backup/my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
OnlineIvectorEstimationStats	backup/my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(const OnlineIvectorEstimationStats &other);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
OnlineIvectorEstimationStats	backup/my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
OnlineIvectorEstimationStats	backup/my-ivector-extractor.h	/^class OnlineIvectorEstimationStats {$/;"	c	namespace:kaldi
OnlineIvectorEstimationStats	my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const OnlineIvectorEstimationStats &other)
OnlineIvectorEstimationStats	my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
OnlineIvectorEstimationStats	my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(const OnlineIvectorEstimationStats &other);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
OnlineIvectorEstimationStats	my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
OnlineIvectorEstimationStats	my-ivector-extractor.h	/^class OnlineIvectorEstimationStats {$/;"	c	namespace:kaldi
PCMData	backup/pcm-reader.h	/^  PCMData() : samp_freq_(0.0) {}$/;"	f	class:kaldi::PCMData	access:public	signature:()
PCMData	backup/pcm-reader.h	/^  PCMData(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)$/;"	f	class:kaldi::PCMData	access:public	signature:(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)
PCMData	backup/pcm-reader.h	/^class PCMData {$/;"	c	namespace:kaldi
PCMData	pcm-reader.h	/^  PCMData() : samp_freq_(0.0) {}$/;"	f	class:kaldi::PCMData	access:public	signature:()
PCMData	pcm-reader.h	/^  PCMData(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)$/;"	f	class:kaldi::PCMData	access:public	signature:(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)
PCMData	pcm-reader.h	/^class PCMData {$/;"	c	namespace:kaldi
PCMHolder	backup/pcm-reader.h	/^  PCMHolder() {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
PCMHolder	backup/pcm-reader.h	/^  PCMHolder(const PCMHolder &other): t_(other.t_) {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
PCMHolder	backup/pcm-reader.h	/^class PCMHolder {$/;"	c	namespace:kaldi
PCMHolder	pcm-reader.h	/^  PCMHolder() {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
PCMHolder	pcm-reader.h	/^  PCMHolder(const PCMHolder &other): t_(other.t_) {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
PCMHolder	pcm-reader.h	/^class PCMHolder {$/;"	c	namespace:kaldi
PriorDiagnostics	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::PriorDiagnostics(double old_prior_offset) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(double old_prior_offset) const
PriorDiagnostics	backup/my-ivector-extractor.h	/^  double PriorDiagnostics(double old_prior_offset) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(double old_prior_offset) const
PriorDiagnostics	my-ivector-extractor.cc	/^double IvectorExtractorStats::PriorDiagnostics(double old_prior_offset) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(double old_prior_offset) const
PriorDiagnostics	my-ivector-extractor.h	/^  double PriorDiagnostics(double old_prior_offset) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(double old_prior_offset) const
PriorOffset	backup/my-init-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
PriorOffset	backup/my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
PriorOffset	backup/my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
PriorOffset	my-init-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
PriorOffset	my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
PriorOffset	my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
Q_	backup/my-ivector-extractor.h	/^  Matrix<double> Q_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
Q_	my-ivector-extractor.h	/^  Matrix<double> Q_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_	backup/my-ivector-extractor.h	/^  Matrix<double> R_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_	my-ivector-extractor.h	/^  Matrix<double> R_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_cache_lock_	backup/my-ivector-extractor.h	/^  Mutex R_cache_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_cache_lock_	my-ivector-extractor.h	/^  Mutex R_cache_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_gamma_cache_	backup/my-ivector-extractor.h	/^  Matrix<double> R_gamma_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_gamma_cache_	my-ivector-extractor.h	/^  Matrix<double> R_gamma_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_ivec_scatter_cache_	backup/my-ivector-extractor.h	/^  Matrix<double> R_ivec_scatter_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_ivec_scatter_cache_	my-ivector-extractor.h	/^  Matrix<double> R_ivec_scatter_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_lock_	backup/my-ivector-extractor.h	/^  Mutex R_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_lock_	my-ivector-extractor.h	/^  Mutex R_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_num_cached_	backup/my-ivector-extractor.h	/^  int32 R_num_cached_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
R_num_cached_	my-ivector-extractor.h	/^  int32 R_num_cached_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
Read	backup/my-init-extractor.cc	/^void InitIvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::istream &is, bool binary)
Read	backup/my-init-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::istream &is, bool binary)
Read	backup/my-ivector-extractor.cc	/^void IvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::istream &is, bool binary)
Read	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Read(std::istream &is, bool binary, bool add) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::istream &is, bool binary, bool add)
Read	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::istream &is, bool binary)
Read	backup/my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::istream &is, bool binary)
Read	backup/my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::istream &is, bool binary)
Read	backup/my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary, bool add = false);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::istream &is, bool binary, bool add = false)
Read	backup/pcm-reader.cc	/^void PCMData::Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, long fileLen)
Read	backup/pcm-reader.h	/^  bool Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::istream &is, long fileLen)
Read	backup/pcm-reader.h	/^  void Read(std::istream &is, long fileLen);$/;"	p	class:kaldi::PCMData	access:public	signature:(std::istream &is, long fileLen)
Read	my-cuda-ivector-extractor.cc	/^void CudaIE<Real>::Read(std::istream &is, bool binary) {$/;"	f	class:CudaIE	signature:(std::istream &is, bool binary)
Read	my-cuda-ivector-extractor.h	/^		void Read(std::istream &is, bool binary);$/;"	p	class:CudaIE	access:public	signature:(std::istream &is, bool binary)
Read	my-init-extractor.cc	/^void InitIvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::istream &is, bool binary)
Read	my-init-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::istream &is, bool binary)
Read	my-ivector-extractor.cc	/^void IvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::istream &is, bool binary)
Read	my-ivector-extractor.cc	/^void IvectorExtractorStats::Read(std::istream &is, bool binary, bool add) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::istream &is, bool binary, bool add)
Read	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::istream &is, bool binary)
Read	my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::istream &is, bool binary)
Read	my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::istream &is, bool binary)
Read	my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary, bool add = false);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::istream &is, bool binary, bool add = false)
Read	pcm-reader.cc	/^void PCMData::Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, long fileLen)
Read	pcm-reader.h	/^  bool Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::istream &is, long fileLen)
Read	pcm-reader.h	/^  void Read(std::istream &is, long fileLen);$/;"	p	class:kaldi::PCMData	access:public	signature:(std::istream &is, long fileLen)
Read4ByteTag	backup/pcm-reader.cc	/^void PCMData::Read4ByteTag(std::istream &is, char *dest) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, char *dest)
Read4ByteTag	backup/pcm-reader.h	/^  static void Read4ByteTag(std::istream &is, char *dest);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, char *dest)
Read4ByteTag	pcm-reader.cc	/^void PCMData::Read4ByteTag(std::istream &is, char *dest) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, char *dest)
Read4ByteTag	pcm-reader.h	/^  static void Read4ByteTag(std::istream &is, char *dest);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, char *dest)
ReadUint16	backup/pcm-reader.cc	/^uint16 PCMData::ReadUint16(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
ReadUint16	backup/pcm-reader.h	/^  uint16 ReadUint16(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
ReadUint16	pcm-reader.cc	/^uint16 PCMData::ReadUint16(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
ReadUint16	pcm-reader.h	/^  uint16 ReadUint16(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
ReadUint32	backup/pcm-reader.cc	/^uint32 PCMData::ReadUint32(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
ReadUint32	backup/pcm-reader.h	/^  uint32 ReadUint32(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
ReadUint32	pcm-reader.cc	/^uint32 PCMData::ReadUint32(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
ReadUint32	pcm-reader.h	/^  uint32 ReadUint32(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:(OptionsItf *opts)
Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:(OptionsItf *opts)
Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:(OptionsItf *opts)
Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:(OptionsItf *opts)
Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:(OptionsItf *opts)
Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:(OptionsItf *opts)
Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:(OptionsItf *opts)
Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:(OptionsItf *opts)
SRE	backup/sre.h	/^		explicit SRE(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm){$/;"	f	class:SRE	access:public	signature:(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm)
SRE	backup/sre.h	/^class SRE {$/;"	c
SRE	sre.h	/^		explicit SRE(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm){$/;"	f	class:SRE	access:public	signature:(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm)
SRE	sre.h	/^class SRE {$/;"	c
SRE::SRE	backup/sre.h	/^		explicit SRE(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm){$/;"	f	class:SRE	access:public	signature:(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm)
SRE::SRE	sre.h	/^		explicit SRE(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm){$/;"	f	class:SRE	access:public	signature:(std::string filename, std::string final_ubm, std::string final_ie, std::string gmm_ubm)
SRE::VoiceData_	backup/sre.h	/^		DataType VoiceData_;$/;"	m	class:SRE	access:private
SRE::VoiceData_	sre.h	/^		DataType VoiceData_;$/;"	m	class:SRE	access:private
SRE::add_feats	backup/sre.h	/^		bool add_feats(SlidingWindowCmnOptions, DeltaFeaturesOptions);$/;"	p	class:SRE	access:public	signature:(SlidingWindowCmnOptions, DeltaFeaturesOptions)
SRE::add_feats	backup/sre.h	/^bool SRE<DataType>::add_feats(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts) {$/;"	f	class:SRE	signature:(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts)
SRE::add_feats	sre.h	/^		bool add_feats(SlidingWindowCmnOptions, DeltaFeaturesOptions);$/;"	p	class:SRE	access:public	signature:(SlidingWindowCmnOptions, DeltaFeaturesOptions)
SRE::add_feats	sre.h	/^bool SRE<DataType>::add_feats(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts) {$/;"	f	class:SRE	signature:(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts)
SRE::compute_mfcc	backup/sre.h	/^		bool compute_mfcc(BaseFloat, MfccOptions, int32);$/;"	p	class:SRE	access:public	signature:(BaseFloat, MfccOptions, int32)
SRE::compute_mfcc	backup/sre.h	/^bool SRE<DataType>::compute_mfcc(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel) {$/;"	f	class:SRE	signature:(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel)
SRE::compute_mfcc	sre.h	/^		bool compute_mfcc(BaseFloat, MfccOptions, int32);$/;"	p	class:SRE	access:public	signature:(BaseFloat, MfccOptions, int32)
SRE::compute_mfcc	sre.h	/^bool SRE<DataType>::compute_mfcc(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel) {$/;"	f	class:SRE	signature:(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel)
SRE::compute_vad	backup/sre.h	/^		bool compute_vad(VadEnergyOptions);$/;"	p	class:SRE	access:public	signature:(VadEnergyOptions)
SRE::compute_vad	backup/sre.h	/^bool SRE<DataType>::compute_vad(VadEnergyOptions vad_opts) {$/;"	f	class:SRE	signature:(VadEnergyOptions vad_opts)
SRE::compute_vad	sre.h	/^		bool compute_vad(VadEnergyOptions);$/;"	p	class:SRE	access:public	signature:(VadEnergyOptions)
SRE::compute_vad	sre.h	/^bool SRE<DataType>::compute_vad(VadEnergyOptions vad_opts) {$/;"	f	class:SRE	signature:(VadEnergyOptions vad_opts)
SRE::extract_ivector	backup/sre.h	/^		bool extract_ivector(IvectorEstimationOptions);$/;"	p	class:SRE	access:public	signature:(IvectorEstimationOptions)
SRE::extract_ivector	backup/sre.h	/^bool SRE<DataType>::extract_ivector(IvectorEstimationOptions extractor_opts) {$/;"	f	class:SRE	signature:(IvectorEstimationOptions extractor_opts)
SRE::extract_ivector	sre.h	/^		bool extract_ivector(IvectorEstimationOptions);$/;"	p	class:SRE	access:public	signature:(IvectorEstimationOptions)
SRE::extract_ivector	sre.h	/^bool SRE<DataType>::extract_ivector(IvectorEstimationOptions extractor_opts) {$/;"	f	class:SRE	signature:(IvectorEstimationOptions extractor_opts)
SRE::features_	backup/sre.h	/^		Matrix<BaseFloat> features_;$/;"	m	class:SRE	access:private
SRE::features_	sre.h	/^		Matrix<BaseFloat> features_;$/;"	m	class:SRE	access:private
SRE::fgmm_	backup/sre.h	/^		FullGmm fgmm_;$/;"	m	class:SRE	access:private
SRE::fgmm_	sre.h	/^		FullGmm fgmm_;$/;"	m	class:SRE	access:private
SRE::fgmm_to_gselect_posterior	backup/sre.h	/^		bool fgmm_to_gselect_posterior(double, BaseFloat, int32);$/;"	p	class:SRE	access:public	signature:(double, BaseFloat, int32)
SRE::fgmm_to_gselect_posterior	backup/sre.h	/^bool SRE<DataType>::fgmm_to_gselect_posterior(double post_scale, BaseFloat min_post, int32 num_gselect) {$/;"	f	class:SRE	signature:(double post_scale, BaseFloat min_post, int32 num_gselect)
SRE::fgmm_to_gselect_posterior	sre.h	/^		bool fgmm_to_gselect_posterior(double, BaseFloat, int32);$/;"	p	class:SRE	access:public	signature:(double, BaseFloat, int32)
SRE::fgmm_to_gselect_posterior	sre.h	/^bool SRE<DataType>::fgmm_to_gselect_posterior(double post_scale, BaseFloat min_post, int32 num_gselect) {$/;"	f	class:SRE	signature:(double post_scale, BaseFloat min_post, int32 num_gselect)
SRE::file_basename_	backup/sre.h	/^		std::string file_basename_;$/;"	m	class:SRE	access:private
SRE::file_basename_	sre.h	/^		std::string file_basename_;$/;"	m	class:SRE	access:private
SRE::filename_	backup/sre.h	/^		std::string filename_;$/;"	m	class:SRE	access:private
SRE::filename_	sre.h	/^		std::string filename_;$/;"	m	class:SRE	access:private
SRE::final_ie_	backup/sre.h	/^		std::string final_ie_;$/;"	m	class:SRE	access:private
SRE::final_ie_	sre.h	/^		std::string final_ie_;$/;"	m	class:SRE	access:private
SRE::get_basename	backup/sre.h	/^		std::string get_basename();$/;"	p	class:SRE	access:public	signature:()
SRE::get_basename	backup/sre.h	/^std::string SRE<DataType>::get_basename() {$/;"	f	class:SRE	signature:()
SRE::get_basename	sre.h	/^		std::string get_basename();$/;"	p	class:SRE	access:public	signature:()
SRE::get_basename	sre.h	/^std::string SRE<DataType>::get_basename() {$/;"	f	class:SRE	signature:()
SRE::get_file_basename	backup/sre.h	/^		std::string get_file_basename(std::string);$/;"	p	class:SRE	access:public	signature:(std::string)
SRE::get_file_basename	backup/sre.h	/^std::string SRE<DataType>::get_file_basename(std::string filename){$/;"	f	class:SRE	signature:(std::string filename)
SRE::get_file_basename	sre.h	/^		std::string get_file_basename(std::string);$/;"	p	class:SRE	access:public	signature:(std::string)
SRE::get_file_basename	sre.h	/^std::string SRE<DataType>::get_file_basename(std::string filename){$/;"	f	class:SRE	signature:(std::string filename)
SRE::get_filename	backup/sre.h	/^		std::string get_filename();$/;"	p	class:SRE	access:public	signature:()
SRE::get_filename	backup/sre.h	/^std::string SRE<DataType>::get_filename() {$/;"	f	class:SRE	signature:()
SRE::get_filename	sre.h	/^		std::string get_filename();$/;"	p	class:SRE	access:public	signature:()
SRE::get_filename	sre.h	/^std::string SRE<DataType>::get_filename() {$/;"	f	class:SRE	signature:()
SRE::get_ivector	backup/sre.h	/^		Vector<BaseFloat> get_ivector();$/;"	p	class:SRE	access:public	signature:()
SRE::get_ivector	backup/sre.h	/^Vector<BaseFloat> SRE<DataType>::get_ivector(){$/;"	f	class:SRE	signature:()
SRE::get_ivector	sre.h	/^		Vector<BaseFloat> get_ivector();$/;"	p	class:SRE	access:public	signature:()
SRE::get_ivector	sre.h	/^Vector<BaseFloat> SRE<DataType>::get_ivector(){$/;"	f	class:SRE	signature:()
SRE::gmm_	backup/sre.h	/^		DiagGmm gmm_;$/;"	m	class:SRE	access:private
SRE::gmm_	sre.h	/^		DiagGmm gmm_;$/;"	m	class:SRE	access:private
SRE::ivector_result_	backup/sre.h	/^		Vector<BaseFloat> ivector_result_;$/;"	m	class:SRE	access:private
SRE::ivector_result_	sre.h	/^		Vector<BaseFloat> ivector_result_;$/;"	m	class:SRE	access:private
SRE::pcm_data_read	backup/sre.h	/^		bool pcm_data_read();$/;"	p	class:SRE	access:public	signature:()
SRE::pcm_data_read	backup/sre.h	/^bool SRE<DataType>::pcm_data_read() {$/;"	f	class:SRE	signature:()
SRE::pcm_data_read	sre.h	/^		bool pcm_data_read();$/;"	p	class:SRE	access:public	signature:()
SRE::pcm_data_read	sre.h	/^bool SRE<DataType>::pcm_data_read() {$/;"	f	class:SRE	signature:()
SRE::post_	backup/sre.h	/^		Posterior post_;$/;"	m	class:SRE	access:private
SRE::post_	sre.h	/^		Posterior post_;$/;"	m	class:SRE	access:private
SRE::sph_scp	backup/sre.h	/^		std::pair<std::string, std::string> sph_scp;$/;"	m	class:SRE	access:public
SRE::sph_scp	sre.h	/^		std::pair<std::string, std::string> sph_scp;$/;"	m	class:SRE	access:public
SRE::spk2utt	backup/sre.h	/^		std::pair<std::string, std::string> spk2utt;$/;"	m	class:SRE	access:public
SRE::spk2utt	sre.h	/^		std::pair<std::string, std::string> spk2utt;$/;"	m	class:SRE	access:public
SRE::utt2spk	backup/sre.h	/^		std::pair<std::string, std::string> utt2spk;$/;"	m	class:SRE	access:public
SRE::utt2spk	sre.h	/^		std::pair<std::string, std::string> utt2spk;$/;"	m	class:SRE	access:public
SRE::vad_result_	backup/sre.h	/^		Vector<BaseFloat> vad_result_;$/;"	m	class:SRE	access:private
SRE::vad_result_	sre.h	/^		Vector<BaseFloat> vad_result_;$/;"	m	class:SRE	access:private
SRE::wav_data_read	backup/sre.h	/^		bool wav_data_read();$/;"	p	class:SRE	access:public	signature:()
SRE::wav_data_read	backup/sre.h	/^bool SRE<DataType>::wav_data_read() {$/;"	f	class:SRE	signature:()
SRE::wav_data_read	sre.h	/^		bool wav_data_read();$/;"	p	class:SRE	access:public	signature:()
SRE::wav_data_read	sre.h	/^bool SRE<DataType>::wav_data_read() {$/;"	f	class:SRE	signature:()
SRE::wav_scp	backup/sre.h	/^		std::pair<std::string, std::string> wav_scp;$/;"	m	class:SRE	access:public
SRE::wav_scp	sre.h	/^		std::pair<std::string, std::string> wav_scp;$/;"	m	class:SRE	access:public
SRE_H	backup/sre.h	2;"	d
SRE_H	sre.h	2;"	d
S_	backup/my-ivector-extractor.h	/^  std::vector< SpMatrix<double> > S_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
S_	backup/my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > S_; \/\/ 2nd-order stats, dimension [I][D][D], if$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
S_	my-ivector-extractor.h	/^  std::vector< SpMatrix<double> > S_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
S_	my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > S_; \/\/ 2nd-order stats, dimension [I][D][D], if$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
SampFreq	backup/pcm-reader.h	/^  BaseFloat SampFreq() const { return samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
SampFreq	pcm-reader.h	/^  BaseFloat SampFreq() const { return samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
Scale	backup/my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::Scale(double scale) {$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:(double scale)
Scale	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Scale(double scale) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(double scale)
Scale	backup/my-ivector-extractor.h	/^  void Scale(double scale); \/\/ Used to apply acoustic scale.$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(double scale)
Scale	backup/my-ivector-extractor.h	/^  void Scale(double scale);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(double scale)
Scale	my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::Scale(double scale) {$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:(double scale)
Scale	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Scale(double scale) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(double scale)
Scale	my-ivector-extractor.h	/^  void Scale(double scale); \/\/ Used to apply acoustic scale.$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(double scale)
Scale	my-ivector-extractor.h	/^  void Scale(double scale);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(double scale)
Sigma_inv_	backup/my-init-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
Sigma_inv_	backup/my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::IvectorExtractor	access:public
Sigma_inv_	my-cuda-ivector-extractor.h	/^		vector<CuSpMatrix<double> > Sigma_inv_;$/;"	m	class:CudaIE	access:private
Sigma_inv_	my-init-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
Sigma_inv_	my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::IvectorExtractor	access:public
Sigma_inv_M_	backup/my-init-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
Sigma_inv_M_	backup/my-ivector-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
Sigma_inv_M_	my-cuda-ivector-extractor.h	/^		vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:CudaIE	access:private
Sigma_inv_M_	my-init-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
Sigma_inv_M_	my-ivector-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
T	backup/pcm-reader.h	/^  typedef PCMData T;$/;"	t	class:kaldi::PCMHolder	access:public
T	pcm-reader.h	/^  typedef PCMData T;$/;"	t	class:kaldi::PCMHolder	access:public
TESTFILES	Makefile	/^TESTFILES =$/;"	m
TESTFILES	backup/Makefile	/^TESTFILES =$/;"	m
TransformIvectors	backup/my-init-extractor.cc	/^void InitIvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::InitIvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
TransformIvectors	backup/my-init-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
TransformIvectors	backup/my-ivector-extractor.cc	/^void IvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::IvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
TransformIvectors	backup/my-ivector-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
TransformIvectors	my-init-extractor.cc	/^void InitIvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::InitIvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
TransformIvectors	my-init-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
TransformIvectors	my-ivector-extractor.cc	/^void IvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::IvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
TransformIvectors	my-ivector-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
U_	backup/my-init-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
U_	backup/my-ivector-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::IvectorExtractor	access:public
U_	my-cuda-ivector-extractor.h	/^		CuMatrix<double> U_;$/;"	m	class:CudaIE	access:private
U_	my-init-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
U_	my-ivector-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::IvectorExtractor	access:public
Update	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::Update($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
Update	backup/my-ivector-extractor.h	/^  double Update(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
Update	my-ivector-extractor.cc	/^double IvectorExtractorStats::Update($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
Update	my-ivector-extractor.h	/^  double Update(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdatePrior	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdatePrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdatePrior	backup/my-ivector-extractor.h	/^  double UpdatePrior(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdatePrior	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdatePrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdatePrior	my-ivector-extractor.h	/^  double UpdatePrior(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateProjection	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjection($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
UpdateProjection	backup/my-ivector-extractor.h	/^  double UpdateProjection(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
UpdateProjection	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjection($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
UpdateProjection	my-ivector-extractor.h	/^  double UpdateProjection(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
UpdateProjections	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjections($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateProjections	backup/my-ivector-extractor.h	/^  double UpdateProjections(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateProjections	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjections($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateProjections	my-ivector-extractor.h	/^  double UpdateProjections(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateVariances	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateVariances($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateVariances	backup/my-ivector-extractor.h	/^  double UpdateVariances(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateVariances	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateVariances($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateVariances	my-ivector-extractor.h	/^  double UpdateVariances(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateWeight	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeight($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
UpdateWeight	backup/my-ivector-extractor.h	/^  double UpdateWeight(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
UpdateWeight	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeight($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
UpdateWeight	my-ivector-extractor.h	/^  double UpdateWeight(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
UpdateWeights	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeights($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateWeights	backup/my-ivector-extractor.h	/^  double UpdateWeights(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateWeights	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeights($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
UpdateWeights	my-ivector-extractor.h	/^  double UpdateWeights(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
Value	backup/pcm-reader.h	/^  const T &Value() { return t_; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
Value	pcm-reader.h	/^  const T &Value() { return t_; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
VoiceData_	backup/sre.h	/^		DataType VoiceData_;$/;"	m	class:SRE	access:private
VoiceData_	sre.h	/^		DataType VoiceData_;$/;"	m	class:SRE	access:private
Write	backup/my-init-extractor.cc	/^void InitIvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::ostream &os, bool binary) const
Write	backup/my-init-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
Write	backup/my-ivector-extractor.cc	/^void IvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::ostream &os, bool binary) const
Write	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary) const
Write	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary)
Write	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::ostream &os, bool binary) const
Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary) const
Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::ostream &os, bool binary) const
Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary); \/\/ non-const version; relates to cache.$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary)
Write	backup/pcm-reader.cc	/^void PCMData::Write(std::ostream &os) const {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os) const
Write	backup/pcm-reader.h	/^  static bool Write(std::ostream &os, bool binary, const T &t) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::ostream &os, bool binary, const T &t)
Write	backup/pcm-reader.h	/^  void Write(std::ostream &os) const;$/;"	p	class:kaldi::PCMData	access:public	signature:(std::ostream &os) const
Write	my-init-extractor.cc	/^void InitIvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::ostream &os, bool binary) const
Write	my-init-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
Write	my-ivector-extractor.cc	/^void IvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::ostream &os, bool binary) const
Write	my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary) const
Write	my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary)
Write	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::ostream &os, bool binary) const
Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary) const
Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::ostream &os, bool binary) const
Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary); \/\/ non-const version; relates to cache.$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary)
Write	pcm-reader.cc	/^void PCMData::Write(std::ostream &os) const {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os) const
Write	pcm-reader.h	/^  static bool Write(std::ostream &os, bool binary, const T &t) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::ostream &os, bool binary, const T &t)
Write	pcm-reader.h	/^  void Write(std::ostream &os) const;$/;"	p	class:kaldi::PCMData	access:public	signature:(std::ostream &os) const
WriteUint16	backup/pcm-reader.cc	/^void PCMData::WriteUint16(std::ostream &os, int16 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int16 i)
WriteUint16	backup/pcm-reader.h	/^  static void WriteUint16(std::ostream &os, int16 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int16 i)
WriteUint16	pcm-reader.cc	/^void PCMData::WriteUint16(std::ostream &os, int16 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int16 i)
WriteUint16	pcm-reader.h	/^  static void WriteUint16(std::ostream &os, int16 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int16 i)
WriteUint32	backup/pcm-reader.cc	/^void PCMData::WriteUint32(std::ostream &os, int32 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int32 i)
WriteUint32	backup/pcm-reader.h	/^  static void WriteUint32(std::ostream &os, int32 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int32 i)
WriteUint32	pcm-reader.cc	/^void PCMData::WriteUint32(std::ostream &os, int32 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int32 i)
WriteUint32	pcm-reader.h	/^  static void WriteUint32(std::ostream &os, int32 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int32 i)
X_	backup/my-ivector-extractor.h	/^  Matrix<double> X_; \/\/ first-order stats, dimension [I][D]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
X_	my-ivector-extractor.h	/^  Matrix<double> X_; \/\/ first-order stats, dimension [I][D]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
Y_	backup/my-ivector-extractor.h	/^  std::vector<Matrix<double> > Y_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
Y_	my-ivector-extractor.h	/^  std::vector<Matrix<double> > Y_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
acoustic_weight	backup/my-ivector-extractor.h	/^  double acoustic_weight;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
acoustic_weight	my-ivector-extractor.h	/^  double acoustic_weight;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
add_feats	backup/sre.h	/^		bool add_feats(SlidingWindowCmnOptions, DeltaFeaturesOptions);$/;"	p	class:SRE	access:public	signature:(SlidingWindowCmnOptions, DeltaFeaturesOptions)
add_feats	backup/sre.h	/^bool SRE<DataType>::add_feats(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts) {$/;"	f	class:SRE	signature:(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts)
add_feats	sre.h	/^		bool add_feats(SlidingWindowCmnOptions, DeltaFeaturesOptions);$/;"	p	class:SRE	access:public	signature:(SlidingWindowCmnOptions, DeltaFeaturesOptions)
add_feats	sre.h	/^bool SRE<DataType>::add_feats(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts) {$/;"	f	class:SRE	signature:(SlidingWindowCmnOptions slid_opts, DeltaFeaturesOptions deltas_opts)
cache_size	backup/my-ivector-extractor.h	/^  int cache_size;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
cache_size	my-ivector-extractor.h	/^  int cache_size;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
compute_auxf	backup/my-ivector-extractor.h	/^  bool compute_auxf;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
compute_auxf	my-ivector-extractor.h	/^  bool compute_auxf;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
compute_mfcc	backup/sre.h	/^		bool compute_mfcc(BaseFloat, MfccOptions, int32);$/;"	p	class:SRE	access:public	signature:(BaseFloat, MfccOptions, int32)
compute_mfcc	backup/sre.h	/^bool SRE<DataType>::compute_mfcc(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel) {$/;"	f	class:SRE	signature:(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel)
compute_mfcc	sre.h	/^		bool compute_mfcc(BaseFloat, MfccOptions, int32);$/;"	p	class:SRE	access:public	signature:(BaseFloat, MfccOptions, int32)
compute_mfcc	sre.h	/^bool SRE<DataType>::compute_mfcc(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel) {$/;"	f	class:SRE	signature:(BaseFloat vtln_warp, MfccOptions mfcc_opts, int32 channel)
compute_vad	backup/sre.h	/^		bool compute_vad(VadEnergyOptions);$/;"	p	class:SRE	access:public	signature:(VadEnergyOptions)
compute_vad	backup/sre.h	/^bool SRE<DataType>::compute_vad(VadEnergyOptions vad_opts) {$/;"	f	class:SRE	signature:(VadEnergyOptions vad_opts)
compute_vad	sre.h	/^		bool compute_vad(VadEnergyOptions);$/;"	p	class:SRE	access:public	signature:(VadEnergyOptions)
compute_vad	sre.h	/^bool SRE<DataType>::compute_vad(VadEnergyOptions vad_opts) {$/;"	f	class:SRE	signature:(VadEnergyOptions vad_opts)
config_	backup/my-ivector-extractor.h	/^  IvectorExtractorStatsOptions config_; \/\/\/ Caution: if we read from disk, this$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
config_	my-ivector-extractor.h	/^  IvectorExtractorStatsOptions config_; \/\/\/ Caution: if we read from disk, this$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
data_	backup/pcm-reader.h	/^  Matrix<BaseFloat> data_;$/;"	m	class:kaldi::PCMData	access:private
data_	pcm-reader.h	/^  Matrix<BaseFloat> data_;$/;"	m	class:kaldi::PCMData	access:private
diagonalize	backup/my-ivector-extractor.h	/^  bool diagonalize;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
diagonalize	my-ivector-extractor.h	/^  bool diagonalize;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
extract_ivector	backup/sre.h	/^		bool extract_ivector(IvectorEstimationOptions);$/;"	p	class:SRE	access:public	signature:(IvectorEstimationOptions)
extract_ivector	backup/sre.h	/^bool SRE<DataType>::extract_ivector(IvectorEstimationOptions extractor_opts) {$/;"	f	class:SRE	signature:(IvectorEstimationOptions extractor_opts)
extract_ivector	sre.h	/^		bool extract_ivector(IvectorEstimationOptions);$/;"	p	class:SRE	access:public	signature:(IvectorEstimationOptions)
extract_ivector	sre.h	/^bool SRE<DataType>::extract_ivector(IvectorEstimationOptions extractor_opts) {$/;"	f	class:SRE	signature:(IvectorEstimationOptions extractor_opts)
extractor_	backup/my-init-extractor.cc	/^  InitIvectorExtractor *extractor_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
extractor_	backup/my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
extractor_	backup/my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
extractor_	backup/my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
extractor_	my-init-extractor.cc	/^  InitIvectorExtractor *extractor_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
extractor_	my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
extractor_	my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
extractor_	my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
feature_	my-cuda-ivector-extractor.h	/^		Matrix<Real> feature_;$/;"	m	class:CudaIE	access:private
features_	backup/sre.h	/^		Matrix<BaseFloat> features_;$/;"	m	class:SRE	access:private
features_	sre.h	/^		Matrix<BaseFloat> features_;$/;"	m	class:SRE	access:private
fgmm_	backup/sre.h	/^		FullGmm fgmm_;$/;"	m	class:SRE	access:private
fgmm_	sre.h	/^		FullGmm fgmm_;$/;"	m	class:SRE	access:private
fgmm_to_gselect_posterior	backup/sre.h	/^		bool fgmm_to_gselect_posterior(double, BaseFloat, int32);$/;"	p	class:SRE	access:public	signature:(double, BaseFloat, int32)
fgmm_to_gselect_posterior	backup/sre.h	/^bool SRE<DataType>::fgmm_to_gselect_posterior(double post_scale, BaseFloat min_post, int32 num_gselect) {$/;"	f	class:SRE	signature:(double post_scale, BaseFloat min_post, int32 num_gselect)
fgmm_to_gselect_posterior	sre.h	/^		bool fgmm_to_gselect_posterior(double, BaseFloat, int32);$/;"	p	class:SRE	access:public	signature:(double, BaseFloat, int32)
fgmm_to_gselect_posterior	sre.h	/^bool SRE<DataType>::fgmm_to_gselect_posterior(double post_scale, BaseFloat min_post, int32 num_gselect) {$/;"	f	class:SRE	signature:(double post_scale, BaseFloat min_post, int32 num_gselect)
fileLen	backup/pcm-reader.h	/^  long fileLen;$/;"	m	class:kaldi::PCMHolder	access:private
fileLen	pcm-reader.h	/^  long fileLen;$/;"	m	class:kaldi::PCMHolder	access:private
file_basename_	backup/sre.h	/^		std::string file_basename_;$/;"	m	class:SRE	access:private
file_basename_	sre.h	/^		std::string file_basename_;$/;"	m	class:SRE	access:private
filename_	backup/sre.h	/^		std::string filename_;$/;"	m	class:SRE	access:private
filename_	sre.h	/^		std::string filename_;$/;"	m	class:SRE	access:private
final_ie_	backup/sre.h	/^		std::string final_ie_;$/;"	m	class:SRE	access:private
final_ie_	sre.h	/^		std::string final_ie_;$/;"	m	class:SRE	access:private
gamma_	backup/my-ivector-extractor.h	/^  Vector<double> gamma_; \/\/ zeroth-order stats (summed posteriors), dimension [I]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
gamma_	backup/my-ivector-extractor.h	/^  Vector<double> gamma_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
gamma_	my-ivector-extractor.h	/^  Vector<double> gamma_; \/\/ zeroth-order stats (summed posteriors), dimension [I]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
gamma_	my-ivector-extractor.h	/^  Vector<double> gamma_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
gamma_Y_lock_	backup/my-ivector-extractor.h	/^  Mutex gamma_Y_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
gamma_Y_lock_	my-ivector-extractor.h	/^  Mutex gamma_Y_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
gaussian_min_count	backup/my-ivector-extractor.h	/^  double gaussian_min_count;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
gaussian_min_count	my-ivector-extractor.h	/^  double gaussian_min_count;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
gconsts_	backup/my-init-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
gconsts_	backup/my-ivector-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::IvectorExtractor	access:public
gconsts_	my-cuda-ivector-extractor.h	/^		CuVector<double> gconsts_;$/;"	m	class:CudaIE	access:private
gconsts_	my-init-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
gconsts_	my-ivector-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::IvectorExtractor	access:public
getSystemTime	backup/sre.h	/^long long getSystemTime() {$/;"	f	signature:()
getSystemTime	backup/sre.h	/^static long long getSystemTime();$/;"	p	signature:()
getSystemTime	sre.h	/^long long getSystemTime() {$/;"	f	signature:()
getSystemTime	sre.h	/^static long long getSystemTime();$/;"	p	signature:()
get_basename	backup/sre.h	/^		std::string get_basename();$/;"	p	class:SRE	access:public	signature:()
get_basename	backup/sre.h	/^std::string SRE<DataType>::get_basename() {$/;"	f	class:SRE	signature:()
get_basename	sre.h	/^		std::string get_basename();$/;"	p	class:SRE	access:public	signature:()
get_basename	sre.h	/^std::string SRE<DataType>::get_basename() {$/;"	f	class:SRE	signature:()
get_file_basename	backup/sre.h	/^		std::string get_file_basename(std::string);$/;"	p	class:SRE	access:public	signature:(std::string)
get_file_basename	backup/sre.h	/^std::string SRE<DataType>::get_file_basename(std::string filename){$/;"	f	class:SRE	signature:(std::string filename)
get_file_basename	sre.h	/^		std::string get_file_basename(std::string);$/;"	p	class:SRE	access:public	signature:(std::string)
get_file_basename	sre.h	/^std::string SRE<DataType>::get_file_basename(std::string filename){$/;"	f	class:SRE	signature:(std::string filename)
get_filename	backup/sre.h	/^		std::string get_filename();$/;"	p	class:SRE	access:public	signature:()
get_filename	backup/sre.h	/^std::string SRE<DataType>::get_filename() {$/;"	f	class:SRE	signature:()
get_filename	sre.h	/^		std::string get_filename();$/;"	p	class:SRE	access:public	signature:()
get_filename	sre.h	/^std::string SRE<DataType>::get_filename() {$/;"	f	class:SRE	signature:()
get_ivector	backup/sre.h	/^		Vector<BaseFloat> get_ivector();$/;"	p	class:SRE	access:public	signature:()
get_ivector	backup/sre.h	/^Vector<BaseFloat> SRE<DataType>::get_ivector(){$/;"	f	class:SRE	signature:()
get_ivector	sre.h	/^		Vector<BaseFloat> get_ivector();$/;"	p	class:SRE	access:public	signature:()
get_ivector	sre.h	/^Vector<BaseFloat> SRE<DataType>::get_ivector(){$/;"	f	class:SRE	signature:()
gmm_	backup/sre.h	/^		DiagGmm gmm_;$/;"	m	class:SRE	access:private
gmm_	sre.h	/^		DiagGmm gmm_;$/;"	m	class:SRE	access:private
i_	backup/my-init-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
i_	backup/my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
i_	backup/my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
i_	backup/my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
i_	my-init-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
i_	my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
i_	my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
i_	my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
impr_	backup/my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
impr_	backup/my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
impr_	my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
impr_	my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
int32	backup/sre.h	/^typedef kaldi::int32 int32;$/;"	t
int32	sre.h	/^typedef kaldi::int32 int32;$/;"	t
int64	backup/sre.h	/^typedef kaldi::int64 int64;$/;"	t
int64	sre.h	/^typedef kaldi::int64 int64;$/;"	t
ivector_dim	backup/my-ivector-extractor.h	/^  int ivector_dim;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
ivector_dim	my-ivector-extractor.h	/^  int ivector_dim;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
ivector_mean	backup/sre.h	/^bool ivector_mean(Vector<BaseFloat> &ivector) {$/;"	f	signature:(Vector<BaseFloat> &ivector)
ivector_mean	backup/sre.h	/^static bool ivector_mean(Vector<BaseFloat> &ivector);$/;"	p	signature:(Vector<BaseFloat> &ivector)
ivector_mean	sre.h	/^bool ivector_mean(Vector<BaseFloat> &ivector) {$/;"	f	signature:(Vector<BaseFloat> &ivector)
ivector_mean	sre.h	/^static bool ivector_mean(Vector<BaseFloat> &ivector);$/;"	p	signature:(Vector<BaseFloat> &ivector)
ivector_normalize_length	backup/sre.h	/^bool ivector_normalize_length(Vector<BaseFloat> &ivector) {$/;"	f	signature:(Vector<BaseFloat> &ivector)
ivector_normalize_length	backup/sre.h	/^static bool ivector_normalize_length(Vector<BaseFloat> &ivector);$/;"	p	signature:(Vector<BaseFloat> &ivector)
ivector_normalize_length	sre.h	/^bool ivector_normalize_length(Vector<BaseFloat> &ivector) {$/;"	f	signature:(Vector<BaseFloat> &ivector)
ivector_normalize_length	sre.h	/^static bool ivector_normalize_length(Vector<BaseFloat> &ivector);$/;"	p	signature:(Vector<BaseFloat> &ivector)
ivector_result_	backup/sre.h	/^		Vector<BaseFloat> ivector_result_;$/;"	m	class:SRE	access:private
ivector_result_	sre.h	/^		Vector<BaseFloat> ivector_result_;$/;"	m	class:SRE	access:private
ivector_scatter_	backup/my-ivector-extractor.h	/^  SpMatrix<double> ivector_scatter_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
ivector_scatter_	my-ivector-extractor.h	/^  SpMatrix<double> ivector_scatter_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
ivector_sum_	backup/my-ivector-extractor.h	/^  Vector<double> ivector_sum_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
ivector_sum_	my-ivector-extractor.h	/^  Vector<double> ivector_sum_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kBlockSize	backup/pcm-reader.h	/^  static const uint32 kBlockSize = 1048576;  \/\/ 1024 * 1024, use 1M bytes$/;"	m	class:kaldi::PCMData	access:private
kBlockSize	pcm-reader.h	/^  static const uint32 kBlockSize = 1048576;  \/\/ 1024 * 1024, use 1M bytes$/;"	m	class:kaldi::PCMData	access:private
kaldi	backup/my-init-extractor.cc	/^namespace kaldi {$/;"	n	file:
kaldi	backup/my-init-extractor.h	/^namespace kaldi {$/;"	n
kaldi	backup/my-ivector-extractor.cc	/^namespace kaldi {$/;"	n	file:
kaldi	backup/my-ivector-extractor.h	/^namespace kaldi {$/;"	n
kaldi	backup/pcm-reader.cc	/^namespace kaldi {$/;"	n	file:
kaldi	backup/pcm-reader.h	/^namespace kaldi {$/;"	n
kaldi	my-init-extractor.cc	/^namespace kaldi {$/;"	n	file:
kaldi	my-init-extractor.h	/^namespace kaldi {$/;"	n
kaldi	my-ivector-extractor.cc	/^namespace kaldi {$/;"	n	file:
kaldi	my-ivector-extractor.h	/^namespace kaldi {$/;"	n
kaldi	pcm-reader.cc	/^namespace kaldi {$/;"	n	file:
kaldi	pcm-reader.h	/^namespace kaldi {$/;"	n
kaldi::EstimateIvectorsOnline	backup/my-ivector-extractor.cc	/^double EstimateIvectorsOnline($/;"	f	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
kaldi::EstimateIvectorsOnline	backup/my-ivector-extractor.h	/^double EstimateIvectorsOnline($/;"	p	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
kaldi::EstimateIvectorsOnline	my-ivector-extractor.cc	/^double EstimateIvectorsOnline($/;"	f	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
kaldi::EstimateIvectorsOnline	my-ivector-extractor.h	/^double EstimateIvectorsOnline($/;"	p	namespace:kaldi	signature:( const Matrix<BaseFloat> &feats, const Posterior &post, const IvectorExtractor &extractor, int32 ivector_period, int32 num_cg_iters, BaseFloat max_count, Matrix<BaseFloat> *ivectors)
kaldi::GetLogDetNoFailure	backup/my-ivector-extractor.cc	/^static double GetLogDetNoFailure(const SpMatrix<double> &var) {$/;"	f	namespace:kaldi	signature:(const SpMatrix<double> &var)
kaldi::GetLogDetNoFailure	my-ivector-extractor.cc	/^static double GetLogDetNoFailure(const SpMatrix<double> &var) {$/;"	f	namespace:kaldi	signature:(const SpMatrix<double> &var)
kaldi::InitIvectorExtractor	backup/my-init-extractor.h	/^class InitIvectorExtractor {$/;"	c	namespace:kaldi
kaldi::InitIvectorExtractor	my-init-extractor.h	/^class InitIvectorExtractor {$/;"	c	namespace:kaldi
kaldi::InitIvectorExtractor::ComputeDerivedVars	backup/my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::InitIvectorExtractor	signature:()
kaldi::InitIvectorExtractor::ComputeDerivedVars	backup/my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(int32 i)
kaldi::InitIvectorExtractor::ComputeDerivedVars	backup/my-init-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:()
kaldi::InitIvectorExtractor::ComputeDerivedVars	backup/my-init-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(int32 i)
kaldi::InitIvectorExtractor::ComputeDerivedVars	my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::InitIvectorExtractor	signature:()
kaldi::InitIvectorExtractor::ComputeDerivedVars	my-init-extractor.cc	/^void InitIvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(int32 i)
kaldi::InitIvectorExtractor::ComputeDerivedVars	my-init-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:()
kaldi::InitIvectorExtractor::ComputeDerivedVars	my-init-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(int32 i)
kaldi::InitIvectorExtractor::FeatDim	backup/my-init-extractor.cc	/^int32 InitIvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
kaldi::InitIvectorExtractor::FeatDim	backup/my-init-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::FeatDim	my-init-extractor.cc	/^int32 InitIvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
kaldi::InitIvectorExtractor::FeatDim	my-init-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::InitIvectorExtractor	backup/my-init-extractor.cc	/^InitIvectorExtractor::InitIvectorExtractor($/;"	f	class:kaldi::InitIvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::InitIvectorExtractor::InitIvectorExtractor	backup/my-init-extractor.h	/^  InitIvectorExtractor($/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::InitIvectorExtractor::InitIvectorExtractor	backup/my-init-extractor.h	/^  InitIvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:()
kaldi::InitIvectorExtractor::InitIvectorExtractor	my-init-extractor.cc	/^InitIvectorExtractor::InitIvectorExtractor($/;"	f	class:kaldi::InitIvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::InitIvectorExtractor::InitIvectorExtractor	my-init-extractor.h	/^  InitIvectorExtractor($/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::InitIvectorExtractor::InitIvectorExtractor	my-init-extractor.h	/^  InitIvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:()
kaldi::InitIvectorExtractor::InvertWithFlooring	backup/my-init-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::InitIvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
kaldi::InitIvectorExtractor::InvertWithFlooring	my-init-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::InitIvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
kaldi::InitIvectorExtractor::IvectorDependentWeights	backup/my-init-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::IvectorDependentWeights	my-init-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::IvectorDim	backup/my-init-extractor.cc	/^int32 InitIvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
kaldi::InitIvectorExtractor::IvectorDim	backup/my-init-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::IvectorDim	my-init-extractor.cc	/^int32 InitIvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
kaldi::InitIvectorExtractor::IvectorDim	my-init-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::M_	backup/my-init-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::M_	my-init-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::NumGauss	backup/my-init-extractor.cc	/^int32 InitIvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
kaldi::InitIvectorExtractor::NumGauss	backup/my-init-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::NumGauss	my-init-extractor.cc	/^int32 InitIvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:() const
kaldi::InitIvectorExtractor::NumGauss	my-init-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::PriorOffset	backup/my-init-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::PriorOffset	my-init-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::InitIvectorExtractor	access:public	signature:() const
kaldi::InitIvectorExtractor::Read	backup/my-init-extractor.cc	/^void InitIvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::istream &is, bool binary)
kaldi::InitIvectorExtractor::Read	backup/my-init-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::istream &is, bool binary)
kaldi::InitIvectorExtractor::Read	my-init-extractor.cc	/^void InitIvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::istream &is, bool binary)
kaldi::InitIvectorExtractor::Read	my-init-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::istream &is, bool binary)
kaldi::InitIvectorExtractor::Sigma_inv_	backup/my-init-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::Sigma_inv_	my-init-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::Sigma_inv_M_	backup/my-init-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::Sigma_inv_M_	my-init-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::TransformIvectors	backup/my-init-extractor.cc	/^void InitIvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::InitIvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::InitIvectorExtractor::TransformIvectors	backup/my-init-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::InitIvectorExtractor::TransformIvectors	my-init-extractor.cc	/^void InitIvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::InitIvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::InitIvectorExtractor::TransformIvectors	my-init-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::InitIvectorExtractor::U_	backup/my-init-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::U_	my-init-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::Write	backup/my-init-extractor.cc	/^void InitIvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::ostream &os, bool binary) const
kaldi::InitIvectorExtractor::Write	backup/my-init-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
kaldi::InitIvectorExtractor::Write	my-init-extractor.cc	/^void InitIvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::InitIvectorExtractor	signature:(std::ostream &os, bool binary) const
kaldi::InitIvectorExtractor::Write	my-init-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::InitIvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
kaldi::InitIvectorExtractor::gconsts_	backup/my-init-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::gconsts_	my-init-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::prior_offset_	backup/my-init-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::prior_offset_	my-init-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::w_	backup/my-init-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::w_	my-init-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::w_vec_	backup/my-init-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractor::w_vec_	my-init-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
kaldi::InitIvectorExtractorComputeDerivedVarsClass	backup/my-init-extractor.cc	/^class InitIvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
kaldi::InitIvectorExtractorComputeDerivedVarsClass	my-init-extractor.cc	/^class InitIvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
kaldi::InitIvectorExtractorComputeDerivedVarsClass::InitIvectorExtractorComputeDerivedVarsClass	backup/my-init-extractor.cc	/^  InitIvectorExtractorComputeDerivedVarsClass(InitIvectorExtractor *extractor,$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:(InitIvectorExtractor *extractor, int32 i)
kaldi::InitIvectorExtractorComputeDerivedVarsClass::InitIvectorExtractorComputeDerivedVarsClass	my-init-extractor.cc	/^  InitIvectorExtractorComputeDerivedVarsClass(InitIvectorExtractor *extractor,$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:(InitIvectorExtractor *extractor, int32 i)
kaldi::InitIvectorExtractorComputeDerivedVarsClass::extractor_	backup/my-init-extractor.cc	/^  InitIvectorExtractor *extractor_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::InitIvectorExtractorComputeDerivedVarsClass::extractor_	my-init-extractor.cc	/^  InitIvectorExtractor *extractor_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::InitIvectorExtractorComputeDerivedVarsClass::i_	backup/my-init-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::InitIvectorExtractorComputeDerivedVarsClass::i_	my-init-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::InitIvectorExtractorComputeDerivedVarsClass::operator ()	backup/my-init-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:()
kaldi::InitIvectorExtractorComputeDerivedVarsClass::operator ()	my-init-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:()
kaldi::IvectorEstimationOptions	backup/my-ivector-extractor.h	/^struct IvectorEstimationOptions {$/;"	s	namespace:kaldi
kaldi::IvectorEstimationOptions	my-ivector-extractor.h	/^struct IvectorEstimationOptions {$/;"	s	namespace:kaldi
kaldi::IvectorEstimationOptions::IvectorEstimationOptions	backup/my-ivector-extractor.h	/^  IvectorEstimationOptions(): acoustic_weight(1.0), max_count(0.0) {}$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:()
kaldi::IvectorEstimationOptions::IvectorEstimationOptions	my-ivector-extractor.h	/^  IvectorEstimationOptions(): acoustic_weight(1.0), max_count(0.0) {}$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:()
kaldi::IvectorEstimationOptions::Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorEstimationOptions::Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorEstimationOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorEstimationOptions::acoustic_weight	backup/my-ivector-extractor.h	/^  double acoustic_weight;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
kaldi::IvectorEstimationOptions::acoustic_weight	my-ivector-extractor.h	/^  double acoustic_weight;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
kaldi::IvectorEstimationOptions::max_count	backup/my-ivector-extractor.h	/^  double max_count;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
kaldi::IvectorEstimationOptions::max_count	my-ivector-extractor.h	/^  double max_count;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
kaldi::IvectorExtractor	backup/my-ivector-extractor.h	/^class IvectorExtractor {$/;"	c	namespace:kaldi
kaldi::IvectorExtractor	my-ivector-extractor.h	/^class IvectorExtractor {$/;"	c	namespace:kaldi
kaldi::IvectorExtractor::ComputeDerivedVars	backup/my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::IvectorExtractor	signature:()
kaldi::IvectorExtractor::ComputeDerivedVars	backup/my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::IvectorExtractor	signature:(int32 i)
kaldi::IvectorExtractor::ComputeDerivedVars	backup/my-ivector-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:()
kaldi::IvectorExtractor::ComputeDerivedVars	backup/my-ivector-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(int32 i)
kaldi::IvectorExtractor::ComputeDerivedVars	my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars() {$/;"	f	class:kaldi::IvectorExtractor	signature:()
kaldi::IvectorExtractor::ComputeDerivedVars	my-ivector-extractor.cc	/^void IvectorExtractor::ComputeDerivedVars(int32 i) {$/;"	f	class:kaldi::IvectorExtractor	signature:(int32 i)
kaldi::IvectorExtractor::ComputeDerivedVars	my-ivector-extractor.h	/^  void ComputeDerivedVars();$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:()
kaldi::IvectorExtractor::ComputeDerivedVars	my-ivector-extractor.h	/^  void ComputeDerivedVars(int32 i);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(int32 i)
kaldi::IvectorExtractor::FeatDim	backup/my-ivector-extractor.cc	/^int32 IvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
kaldi::IvectorExtractor::FeatDim	backup/my-ivector-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::FeatDim	my-ivector-extractor.cc	/^int32 IvectorExtractor::FeatDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
kaldi::IvectorExtractor::FeatDim	my-ivector-extractor.h	/^  int32 FeatDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::GetAcousticAuxf	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAcousticAuxf	backup/my-ivector-extractor.h	/^  double GetAcousticAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetAcousticAuxf	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAcousticAuxf	my-ivector-extractor.h	/^  double GetAcousticAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetAcousticAuxfGconst	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfGconst($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfGconst	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfGconst($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfGconst	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfGconst($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfGconst	my-ivector-extractor.h	/^  double GetAcousticAuxfGconst($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfMean	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAcousticAuxfMean	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetAcousticAuxfMean	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAcousticAuxfMean	my-ivector-extractor.h	/^  double GetAcousticAuxfMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetAcousticAuxfVariance	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfVariance($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfVariance	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfVariance($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfVariance	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfVariance($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfVariance	my-ivector-extractor.h	/^  double GetAcousticAuxfVariance($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats) const
kaldi::IvectorExtractor::GetAcousticAuxfWeight	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAcousticAuxfWeight	backup/my-ivector-extractor.h	/^  double GetAcousticAuxfWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetAcousticAuxfWeight	my-ivector-extractor.cc	/^double IvectorExtractor::GetAcousticAuxfWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAcousticAuxfWeight	my-ivector-extractor.h	/^  double GetAcousticAuxfWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetAuxf	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	f	class:kaldi::IvectorExtractor	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAuxf	backup/my-ivector-extractor.h	/^  double GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetAuxf	my-ivector-extractor.cc	/^double IvectorExtractor::GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	f	class:kaldi::IvectorExtractor	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetAuxf	my-ivector-extractor.h	/^  double GetAuxf(const IvectorExtractorUtteranceStats &utt_stats,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetIvectorDistMean	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistMean	backup/my-ivector-extractor.h	/^  void GetIvectorDistMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistMean	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistMean($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistMean	my-ivector-extractor.h	/^  void GetIvectorDistMean($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistPrior	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistPrior($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistPrior	backup/my-ivector-extractor.h	/^  void GetIvectorDistPrior($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistPrior	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistPrior($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistPrior	my-ivector-extractor.h	/^  void GetIvectorDistPrior($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistWeight	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistWeight	backup/my-ivector-extractor.h	/^  void GetIvectorDistWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistWeight	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistWeight($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistWeight	my-ivector-extractor.h	/^  void GetIvectorDistWeight($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &mean, VectorBase<double> *linear, SpMatrix<double> *quadratic) const
kaldi::IvectorExtractor::GetIvectorDistribution	backup/my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistribution($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetIvectorDistribution	backup/my-ivector-extractor.h	/^  void GetIvectorDistribution($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetIvectorDistribution	my-ivector-extractor.cc	/^void IvectorExtractor::GetIvectorDistribution($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetIvectorDistribution	my-ivector-extractor.h	/^  void GetIvectorDistribution($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorUtteranceStats &utt_stats, VectorBase<double> *mean, SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetPriorAuxf	backup/my-ivector-extractor.cc	/^double IvectorExtractor::GetPriorAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetPriorAuxf	backup/my-ivector-extractor.h	/^  double GetPriorAuxf(const VectorBase<double> &mean,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::GetPriorAuxf	my-ivector-extractor.cc	/^double IvectorExtractor::GetPriorAuxf($/;"	f	class:kaldi::IvectorExtractor	signature:( const VectorBase<double> &mean, const SpMatrix<double> *var) const
kaldi::IvectorExtractor::GetPriorAuxf	my-ivector-extractor.h	/^  double GetPriorAuxf(const VectorBase<double> &mean,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const VectorBase<double> &mean, const SpMatrix<double> *var = NULL) const
kaldi::IvectorExtractor::InvertWithFlooring	backup/my-ivector-extractor.cc	/^void IvectorExtractor::InvertWithFlooring(const SpMatrix<double> &inverse_var,$/;"	f	class:kaldi::IvectorExtractor	signature:(const SpMatrix<double> &inverse_var, SpMatrix<double> *var)
kaldi::IvectorExtractor::InvertWithFlooring	backup/my-ivector-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::IvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
kaldi::IvectorExtractor::InvertWithFlooring	my-ivector-extractor.cc	/^void IvectorExtractor::InvertWithFlooring(const SpMatrix<double> &inverse_var,$/;"	f	class:kaldi::IvectorExtractor	signature:(const SpMatrix<double> &inverse_var, SpMatrix<double> *var)
kaldi::IvectorExtractor::InvertWithFlooring	my-ivector-extractor.h	/^  static void InvertWithFlooring(const SpMatrix<double> &quadratic_term,$/;"	p	class:kaldi::IvectorExtractor	access:private	signature:(const SpMatrix<double> &quadratic_term, SpMatrix<double> *var)
kaldi::IvectorExtractor::IvectorDependentWeights	backup/my-ivector-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::IvectorDependentWeights	my-ivector-extractor.h	/^  bool IvectorDependentWeights() const { return w_.NumRows() != 0; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::IvectorDim	backup/my-ivector-extractor.cc	/^int32 IvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
kaldi::IvectorExtractor::IvectorDim	backup/my-ivector-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::IvectorDim	my-ivector-extractor.cc	/^int32 IvectorExtractor::IvectorDim() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
kaldi::IvectorExtractor::IvectorDim	my-ivector-extractor.h	/^  int32 IvectorDim() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::IvectorExtractor	backup/my-ivector-extractor.cc	/^IvectorExtractor::IvectorExtractor($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::IvectorExtractor::IvectorExtractor	backup/my-ivector-extractor.h	/^  IvectorExtractor($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::IvectorExtractor::IvectorExtractor	backup/my-ivector-extractor.h	/^  IvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:()
kaldi::IvectorExtractor::IvectorExtractor	my-ivector-extractor.cc	/^IvectorExtractor::IvectorExtractor($/;"	f	class:kaldi::IvectorExtractor	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::IvectorExtractor::IvectorExtractor	my-ivector-extractor.h	/^  IvectorExtractor($/;"	p	class:kaldi::IvectorExtractor	access:public	signature:( const IvectorExtractorOptions &opts, const FullGmm &fgmm)
kaldi::IvectorExtractor::IvectorExtractor	my-ivector-extractor.h	/^  IvectorExtractor(): prior_offset_(0.0) { }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:()
kaldi::IvectorExtractor::M_	backup/my-ivector-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::M_	my-ivector-extractor.h	/^  std::vector<Matrix<double> > M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::NumGauss	backup/my-ivector-extractor.cc	/^int32 IvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
kaldi::IvectorExtractor::NumGauss	backup/my-ivector-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::NumGauss	my-ivector-extractor.cc	/^int32 IvectorExtractor::NumGauss() const {$/;"	f	class:kaldi::IvectorExtractor	signature:() const
kaldi::IvectorExtractor::NumGauss	my-ivector-extractor.h	/^  int32 NumGauss() const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::PriorOffset	backup/my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::PriorOffset	my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::IvectorExtractor	access:public	signature:() const
kaldi::IvectorExtractor::Read	backup/my-ivector-extractor.cc	/^void IvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::istream &is, bool binary)
kaldi::IvectorExtractor::Read	backup/my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::istream &is, bool binary)
kaldi::IvectorExtractor::Read	my-ivector-extractor.cc	/^void IvectorExtractor::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::istream &is, bool binary)
kaldi::IvectorExtractor::Read	my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::istream &is, bool binary)
kaldi::IvectorExtractor::Sigma_inv_	backup/my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::Sigma_inv_	my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > Sigma_inv_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::Sigma_inv_M_	backup/my-ivector-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::Sigma_inv_M_	my-ivector-extractor.h	/^  std::vector<Matrix<double> > Sigma_inv_M_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::TransformIvectors	backup/my-ivector-extractor.cc	/^void IvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::IvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::IvectorExtractor::TransformIvectors	backup/my-ivector-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::IvectorExtractor::TransformIvectors	my-ivector-extractor.cc	/^void IvectorExtractor::TransformIvectors(const MatrixBase<double> &T,$/;"	f	class:kaldi::IvectorExtractor	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::IvectorExtractor::TransformIvectors	my-ivector-extractor.h	/^  void TransformIvectors(const MatrixBase<double> &T,$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(const MatrixBase<double> &T, double new_prior_offset)
kaldi::IvectorExtractor::U_	backup/my-ivector-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::U_	my-ivector-extractor.h	/^  Matrix<double> U_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::Write	backup/my-ivector-extractor.cc	/^void IvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractor::Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractor::Write	my-ivector-extractor.cc	/^void IvectorExtractor::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractor	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractor::Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractor	access:public	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractor::gconsts_	backup/my-ivector-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::gconsts_	my-ivector-extractor.h	/^  Vector<double> gconsts_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::prior_offset_	backup/my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::prior_offset_	my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::w_	backup/my-ivector-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::w_	my-ivector-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::w_vec_	backup/my-ivector-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractor::w_vec_	my-ivector-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::IvectorExtractor	access:public
kaldi::IvectorExtractorComputeDerivedVarsClass	backup/my-ivector-extractor.cc	/^class IvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
kaldi::IvectorExtractorComputeDerivedVarsClass	my-ivector-extractor.cc	/^class IvectorExtractorComputeDerivedVarsClass {$/;"	c	namespace:kaldi	file:
kaldi::IvectorExtractorComputeDerivedVarsClass::IvectorExtractorComputeDerivedVarsClass	backup/my-ivector-extractor.cc	/^  IvectorExtractorComputeDerivedVarsClass(IvectorExtractor *extractor,$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:(IvectorExtractor *extractor, int32 i)
kaldi::IvectorExtractorComputeDerivedVarsClass::IvectorExtractorComputeDerivedVarsClass	my-ivector-extractor.cc	/^  IvectorExtractorComputeDerivedVarsClass(IvectorExtractor *extractor,$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:(IvectorExtractor *extractor, int32 i)
kaldi::IvectorExtractorComputeDerivedVarsClass::extractor_	backup/my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::IvectorExtractorComputeDerivedVarsClass::extractor_	my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::IvectorExtractorComputeDerivedVarsClass::i_	backup/my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::IvectorExtractorComputeDerivedVarsClass::i_	my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorComputeDerivedVarsClass	file:	access:private
kaldi::IvectorExtractorComputeDerivedVarsClass::operator ()	backup/my-ivector-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:()
kaldi::IvectorExtractorComputeDerivedVarsClass::operator ()	my-ivector-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:()
kaldi::IvectorExtractorEstimationOptions	backup/my-ivector-extractor.h	/^struct IvectorExtractorEstimationOptions {$/;"	s	namespace:kaldi
kaldi::IvectorExtractorEstimationOptions	my-ivector-extractor.h	/^struct IvectorExtractorEstimationOptions {$/;"	s	namespace:kaldi
kaldi::IvectorExtractorEstimationOptions::IvectorExtractorEstimationOptions	backup/my-ivector-extractor.h	/^  IvectorExtractorEstimationOptions(): variance_floor_factor(0.1),$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:()
kaldi::IvectorExtractorEstimationOptions::IvectorExtractorEstimationOptions	my-ivector-extractor.h	/^  IvectorExtractorEstimationOptions(): variance_floor_factor(0.1),$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:()
kaldi::IvectorExtractorEstimationOptions::Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorExtractorEstimationOptions::Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorEstimationOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorExtractorEstimationOptions::diagonalize	backup/my-ivector-extractor.h	/^  bool diagonalize;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorEstimationOptions::diagonalize	my-ivector-extractor.h	/^  bool diagonalize;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorEstimationOptions::gaussian_min_count	backup/my-ivector-extractor.h	/^  double gaussian_min_count;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorEstimationOptions::gaussian_min_count	my-ivector-extractor.h	/^  double gaussian_min_count;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorEstimationOptions::num_threads	backup/my-ivector-extractor.h	/^  int32 num_threads;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorEstimationOptions::num_threads	my-ivector-extractor.h	/^  int32 num_threads;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorEstimationOptions::variance_floor_factor	backup/my-ivector-extractor.h	/^  double variance_floor_factor;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorEstimationOptions::variance_floor_factor	my-ivector-extractor.h	/^  double variance_floor_factor;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
kaldi::IvectorExtractorOptions	backup/my-ivector-extractor.h	/^struct IvectorExtractorOptions {$/;"	s	namespace:kaldi
kaldi::IvectorExtractorOptions	my-ivector-extractor.h	/^struct IvectorExtractorOptions {$/;"	s	namespace:kaldi
kaldi::IvectorExtractorOptions::IvectorExtractorOptions	backup/my-ivector-extractor.h	/^  IvectorExtractorOptions(): ivector_dim(400), num_iters(2),$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:()
kaldi::IvectorExtractorOptions::IvectorExtractorOptions	my-ivector-extractor.h	/^  IvectorExtractorOptions(): ivector_dim(400), num_iters(2),$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:()
kaldi::IvectorExtractorOptions::Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorExtractorOptions::Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorExtractorOptions::ivector_dim	backup/my-ivector-extractor.h	/^  int ivector_dim;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
kaldi::IvectorExtractorOptions::ivector_dim	my-ivector-extractor.h	/^  int ivector_dim;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
kaldi::IvectorExtractorOptions::num_iters	backup/my-ivector-extractor.h	/^  int num_iters;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
kaldi::IvectorExtractorOptions::num_iters	my-ivector-extractor.h	/^  int num_iters;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
kaldi::IvectorExtractorOptions::use_weights	backup/my-ivector-extractor.h	/^  bool use_weights;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
kaldi::IvectorExtractorOptions::use_weights	my-ivector-extractor.h	/^  bool use_weights;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
kaldi::IvectorExtractorStats	backup/my-ivector-extractor.h	/^class IvectorExtractorStats {$/;"	c	namespace:kaldi
kaldi::IvectorExtractorStats	my-ivector-extractor.h	/^class IvectorExtractorStats {$/;"	c	namespace:kaldi
kaldi::IvectorExtractorStats::AccStatsForUtterance	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
kaldi::IvectorExtractorStats::AccStatsForUtterance	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorStats::AccStatsForUtterance	backup/my-ivector-extractor.h	/^  double AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
kaldi::IvectorExtractorStats::AccStatsForUtterance	backup/my-ivector-extractor.h	/^  void AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorStats::AccStatsForUtterance	my-ivector-extractor.cc	/^double IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
kaldi::IvectorExtractorStats::AccStatsForUtterance	my-ivector-extractor.cc	/^void IvectorExtractorStats::AccStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorStats::AccStatsForUtterance	my-ivector-extractor.h	/^  double AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const FullGmm &fgmm)
kaldi::IvectorExtractorStats::AccStatsForUtterance	my-ivector-extractor.h	/^  void AccStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorStats::Add	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Add(const IvectorExtractorStats &other) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::Add	backup/my-ivector-extractor.h	/^  void Add(const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::Add	my-ivector-extractor.cc	/^void IvectorExtractorStats::Add(const IvectorExtractorStats &other) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::Add	my-ivector-extractor.h	/^  void Add(const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::AuxfPerFrame	backup/my-ivector-extractor.h	/^  double AuxfPerFrame() { return tot_auxf_ \/ gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
kaldi::IvectorExtractorStats::AuxfPerFrame	my-ivector-extractor.h	/^  double AuxfPerFrame() { return tot_auxf_ \/ gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
kaldi::IvectorExtractorStats::CheckDims	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CheckDims(const IvectorExtractor &extractor) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractor &extractor) const
kaldi::IvectorExtractorStats::CheckDims	backup/my-ivector-extractor.h	/^  void CheckDims(const IvectorExtractor &extractor) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor) const
kaldi::IvectorExtractorStats::CheckDims	my-ivector-extractor.cc	/^void IvectorExtractorStats::CheckDims(const IvectorExtractor &extractor) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(const IvectorExtractor &extractor) const
kaldi::IvectorExtractorStats::CheckDims	my-ivector-extractor.h	/^  void CheckDims(const IvectorExtractor &extractor) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor) const
kaldi::IvectorExtractorStats::CommitStatsForM	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForM($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForM	backup/my-ivector-extractor.h	/^  void CommitStatsForM(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForM	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForM($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForM	my-ivector-extractor.h	/^  void CommitStatsForM(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForPrior	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForPrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForPrior	backup/my-ivector-extractor.h	/^  void CommitStatsForPrior(const VectorBase<double> &ivec_mean,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForPrior	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForPrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForPrior	my-ivector-extractor.h	/^  void CommitStatsForPrior(const VectorBase<double> &ivec_mean,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForSigma	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForSigma($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForSigma	backup/my-ivector-extractor.h	/^  void CommitStatsForSigma(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForSigma	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForSigma($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForSigma	my-ivector-extractor.h	/^  void CommitStatsForSigma(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForUtterance	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForUtterance	backup/my-ivector-extractor.h	/^  void CommitStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForUtterance	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForUtterance($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForUtterance	my-ivector-extractor.h	/^  void CommitStatsForUtterance(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats)
kaldi::IvectorExtractorStats::CommitStatsForW	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForW($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForW	backup/my-ivector-extractor.h	/^  void CommitStatsForW(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForW	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForW($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForW	my-ivector-extractor.h	/^  void CommitStatsForW(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivec_mean, const SpMatrix<double> &ivec_var)
kaldi::IvectorExtractorStats::CommitStatsForWPoint	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForWPoint($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
kaldi::IvectorExtractorStats::CommitStatsForWPoint	backup/my-ivector-extractor.h	/^  void CommitStatsForWPoint(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
kaldi::IvectorExtractorStats::CommitStatsForWPoint	my-ivector-extractor.cc	/^void IvectorExtractorStats::CommitStatsForWPoint($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
kaldi::IvectorExtractorStats::CommitStatsForWPoint	my-ivector-extractor.h	/^  void CommitStatsForWPoint(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractor &extractor, const IvectorExtractorUtteranceStats &utt_stats, const VectorBase<double> &ivector, double weight)
kaldi::IvectorExtractorStats::FlushCache	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::FlushCache() {$/;"	f	class:kaldi::IvectorExtractorStats	signature:()
kaldi::IvectorExtractorStats::FlushCache	backup/my-ivector-extractor.h	/^  void FlushCache();$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:()
kaldi::IvectorExtractorStats::FlushCache	my-ivector-extractor.cc	/^void IvectorExtractorStats::FlushCache() {$/;"	f	class:kaldi::IvectorExtractorStats	signature:()
kaldi::IvectorExtractorStats::FlushCache	my-ivector-extractor.h	/^  void FlushCache();$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:()
kaldi::IvectorExtractorStats::G_	backup/my-ivector-extractor.h	/^  Matrix<double> G_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::G_	my-ivector-extractor.h	/^  Matrix<double> G_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::GetOrthogonalIvectorTransform	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::GetOrthogonalIvectorTransform($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
kaldi::IvectorExtractorStats::GetOrthogonalIvectorTransform	backup/my-ivector-extractor.h	/^  void GetOrthogonalIvectorTransform(const SubMatrix<double> &T,$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
kaldi::IvectorExtractorStats::GetOrthogonalIvectorTransform	my-ivector-extractor.cc	/^void IvectorExtractorStats::GetOrthogonalIvectorTransform($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
kaldi::IvectorExtractorStats::GetOrthogonalIvectorTransform	my-ivector-extractor.h	/^  void GetOrthogonalIvectorTransform(const SubMatrix<double> &T,$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const SubMatrix<double> &T, IvectorExtractor *extractor, Matrix<double> *A) const
kaldi::IvectorExtractorStats::IvectorExtractorStats	backup/my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats ($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::IvectorExtractorStats	backup/my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
kaldi::IvectorExtractorStats::IvectorExtractorStats	backup/my-ivector-extractor.h	/^  IvectorExtractorStats(): tot_auxf_(0.0), R_num_cached_(0), num_ivectors_(0) { }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
kaldi::IvectorExtractorStats::IvectorExtractorStats	backup/my-ivector-extractor.h	/^  IvectorExtractorStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
kaldi::IvectorExtractorStats::IvectorExtractorStats	backup/my-ivector-extractor.h	/^  explicit IvectorExtractorStats (const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::IvectorExtractorStats	my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats ($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::IvectorExtractorStats	my-ivector-extractor.cc	/^IvectorExtractorStats::IvectorExtractorStats($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
kaldi::IvectorExtractorStats::IvectorExtractorStats	my-ivector-extractor.h	/^  IvectorExtractorStats(): tot_auxf_(0.0), R_num_cached_(0), num_ivectors_(0) { }$/;"	f	class:kaldi::IvectorExtractorStats	access:public	signature:()
kaldi::IvectorExtractorStats::IvectorExtractorStats	my-ivector-extractor.h	/^  IvectorExtractorStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor, const IvectorExtractorStatsOptions &stats_opts)
kaldi::IvectorExtractorStats::IvectorExtractorStats	my-ivector-extractor.h	/^  explicit IvectorExtractorStats (const IvectorExtractorStats &other);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::IvectorVarianceDiagnostic	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::IvectorVarianceDiagnostic($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor)
kaldi::IvectorExtractorStats::IvectorVarianceDiagnostic	backup/my-ivector-extractor.h	/^  void IvectorVarianceDiagnostic(const IvectorExtractor &extractor);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor)
kaldi::IvectorExtractorStats::IvectorVarianceDiagnostic	my-ivector-extractor.cc	/^void IvectorExtractorStats::IvectorVarianceDiagnostic($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractor &extractor)
kaldi::IvectorExtractorStats::IvectorVarianceDiagnostic	my-ivector-extractor.h	/^  void IvectorVarianceDiagnostic(const IvectorExtractor &extractor);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractor &extractor)
kaldi::IvectorExtractorStats::PriorDiagnostics	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::PriorDiagnostics(double old_prior_offset) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(double old_prior_offset) const
kaldi::IvectorExtractorStats::PriorDiagnostics	backup/my-ivector-extractor.h	/^  double PriorDiagnostics(double old_prior_offset) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(double old_prior_offset) const
kaldi::IvectorExtractorStats::PriorDiagnostics	my-ivector-extractor.cc	/^double IvectorExtractorStats::PriorDiagnostics(double old_prior_offset) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(double old_prior_offset) const
kaldi::IvectorExtractorStats::PriorDiagnostics	my-ivector-extractor.h	/^  double PriorDiagnostics(double old_prior_offset) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(double old_prior_offset) const
kaldi::IvectorExtractorStats::Q_	backup/my-ivector-extractor.h	/^  Matrix<double> Q_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::Q_	my-ivector-extractor.h	/^  Matrix<double> Q_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_	backup/my-ivector-extractor.h	/^  Matrix<double> R_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_	my-ivector-extractor.h	/^  Matrix<double> R_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_cache_lock_	backup/my-ivector-extractor.h	/^  Mutex R_cache_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_cache_lock_	my-ivector-extractor.h	/^  Mutex R_cache_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_gamma_cache_	backup/my-ivector-extractor.h	/^  Matrix<double> R_gamma_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_gamma_cache_	my-ivector-extractor.h	/^  Matrix<double> R_gamma_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_ivec_scatter_cache_	backup/my-ivector-extractor.h	/^  Matrix<double> R_ivec_scatter_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_ivec_scatter_cache_	my-ivector-extractor.h	/^  Matrix<double> R_ivec_scatter_cache_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_lock_	backup/my-ivector-extractor.h	/^  Mutex R_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_lock_	my-ivector-extractor.h	/^  Mutex R_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_num_cached_	backup/my-ivector-extractor.h	/^  int32 R_num_cached_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::R_num_cached_	my-ivector-extractor.h	/^  int32 R_num_cached_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::Read	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Read(std::istream &is, bool binary, bool add) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::istream &is, bool binary, bool add)
kaldi::IvectorExtractorStats::Read	backup/my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary, bool add = false);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::istream &is, bool binary, bool add = false)
kaldi::IvectorExtractorStats::Read	my-ivector-extractor.cc	/^void IvectorExtractorStats::Read(std::istream &is, bool binary, bool add) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::istream &is, bool binary, bool add)
kaldi::IvectorExtractorStats::Read	my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary, bool add = false);$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::istream &is, bool binary, bool add = false)
kaldi::IvectorExtractorStats::S_	backup/my-ivector-extractor.h	/^  std::vector< SpMatrix<double> > S_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::S_	my-ivector-extractor.h	/^  std::vector< SpMatrix<double> > S_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::Update	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::Update($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::Update	backup/my-ivector-extractor.h	/^  double Update(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::Update	my-ivector-extractor.cc	/^double IvectorExtractorStats::Update($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::Update	my-ivector-extractor.h	/^  double Update(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdatePrior	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdatePrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdatePrior	backup/my-ivector-extractor.h	/^  double UpdatePrior(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdatePrior	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdatePrior($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdatePrior	my-ivector-extractor.h	/^  double UpdatePrior(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjection	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjection($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjection	backup/my-ivector-extractor.h	/^  double UpdateProjection(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjection	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjection($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjection	my-ivector-extractor.h	/^  double UpdateProjection(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjections	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjections($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjections	backup/my-ivector-extractor.h	/^  double UpdateProjections(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjections	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateProjections($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateProjections	my-ivector-extractor.h	/^  double UpdateProjections(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateVariances	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateVariances($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateVariances	backup/my-ivector-extractor.h	/^  double UpdateVariances(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateVariances	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateVariances($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateVariances	my-ivector-extractor.h	/^  double UpdateVariances(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeight	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeight($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeight	backup/my-ivector-extractor.h	/^  double UpdateWeight(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeight	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeight($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeight	my-ivector-extractor.h	/^  double UpdateWeight(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, int32 gaussian, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeights	backup/my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeights($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeights	backup/my-ivector-extractor.h	/^  double UpdateWeights(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeights	my-ivector-extractor.cc	/^double IvectorExtractorStats::UpdateWeights($/;"	f	class:kaldi::IvectorExtractorStats	signature:( const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::UpdateWeights	my-ivector-extractor.h	/^  double UpdateWeights(const IvectorExtractorEstimationOptions &opts,$/;"	p	class:kaldi::IvectorExtractorStats	access:protected	signature:(const IvectorExtractorEstimationOptions &opts, IvectorExtractor *extractor) const
kaldi::IvectorExtractorStats::Write	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractorStats::Write	backup/my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary)
kaldi::IvectorExtractorStats::Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractorStats::Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary); \/\/ non-const version; relates to cache.$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary)
kaldi::IvectorExtractorStats::Write	my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractorStats::Write	my-ivector-extractor.cc	/^void IvectorExtractorStats::Write(std::ostream &os, bool binary) {$/;"	f	class:kaldi::IvectorExtractorStats	signature:(std::ostream &os, bool binary)
kaldi::IvectorExtractorStats::Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary) const
kaldi::IvectorExtractorStats::Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary); \/\/ non-const version; relates to cache.$/;"	p	class:kaldi::IvectorExtractorStats	access:public	signature:(std::ostream &os, bool binary)
kaldi::IvectorExtractorStats::Y_	backup/my-ivector-extractor.h	/^  std::vector<Matrix<double> > Y_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::Y_	my-ivector-extractor.h	/^  std::vector<Matrix<double> > Y_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::config_	backup/my-ivector-extractor.h	/^  IvectorExtractorStatsOptions config_; \/\/\/ Caution: if we read from disk, this$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::config_	my-ivector-extractor.h	/^  IvectorExtractorStatsOptions config_; \/\/\/ Caution: if we read from disk, this$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::gamma_	backup/my-ivector-extractor.h	/^  Vector<double> gamma_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::gamma_	my-ivector-extractor.h	/^  Vector<double> gamma_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::gamma_Y_lock_	backup/my-ivector-extractor.h	/^  Mutex gamma_Y_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::gamma_Y_lock_	my-ivector-extractor.h	/^  Mutex gamma_Y_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::ivector_scatter_	backup/my-ivector-extractor.h	/^  SpMatrix<double> ivector_scatter_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::ivector_scatter_	my-ivector-extractor.h	/^  SpMatrix<double> ivector_scatter_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::ivector_sum_	backup/my-ivector-extractor.h	/^  Vector<double> ivector_sum_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::ivector_sum_	my-ivector-extractor.h	/^  Vector<double> ivector_sum_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::num_ivectors_	backup/my-ivector-extractor.h	/^  double num_ivectors_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::num_ivectors_	my-ivector-extractor.h	/^  double num_ivectors_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::operator =	backup/my-ivector-extractor.h	/^  IvectorExtractorStats &operator = (const IvectorExtractorStats &other);  \/\/ Disallow.$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::operator =	my-ivector-extractor.h	/^  IvectorExtractorStats &operator = (const IvectorExtractorStats &other);  \/\/ Disallow.$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const IvectorExtractorStats &other)
kaldi::IvectorExtractorStats::prior_stats_lock_	backup/my-ivector-extractor.h	/^  Mutex prior_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::prior_stats_lock_	my-ivector-extractor.h	/^  Mutex prior_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::tot_auxf_	backup/my-ivector-extractor.h	/^  double tot_auxf_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::tot_auxf_	my-ivector-extractor.h	/^  double tot_auxf_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::variance_stats_lock_	backup/my-ivector-extractor.h	/^  Mutex variance_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::variance_stats_lock_	my-ivector-extractor.h	/^  Mutex variance_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::weight_stats_lock_	backup/my-ivector-extractor.h	/^  Mutex weight_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStats::weight_stats_lock_	my-ivector-extractor.h	/^  Mutex weight_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
kaldi::IvectorExtractorStatsOptions	backup/my-ivector-extractor.h	/^struct IvectorExtractorStatsOptions {$/;"	s	namespace:kaldi
kaldi::IvectorExtractorStatsOptions	my-ivector-extractor.h	/^struct IvectorExtractorStatsOptions {$/;"	s	namespace:kaldi
kaldi::IvectorExtractorStatsOptions::IvectorExtractorStatsOptions	backup/my-ivector-extractor.h	/^  IvectorExtractorStatsOptions(): update_variances(true),$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:()
kaldi::IvectorExtractorStatsOptions::IvectorExtractorStatsOptions	my-ivector-extractor.h	/^  IvectorExtractorStatsOptions(): update_variances(true),$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:()
kaldi::IvectorExtractorStatsOptions::Register	backup/my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorExtractorStatsOptions::Register	my-ivector-extractor.h	/^  void Register(OptionsItf *opts) {$/;"	f	struct:kaldi::IvectorExtractorStatsOptions	access:public	signature:(OptionsItf *opts)
kaldi::IvectorExtractorStatsOptions::cache_size	backup/my-ivector-extractor.h	/^  int cache_size;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorStatsOptions::cache_size	my-ivector-extractor.h	/^  int cache_size;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorStatsOptions::compute_auxf	backup/my-ivector-extractor.h	/^  bool compute_auxf;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorStatsOptions::compute_auxf	my-ivector-extractor.h	/^  bool compute_auxf;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorStatsOptions::num_samples_for_weights	backup/my-ivector-extractor.h	/^  int32 num_samples_for_weights;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorStatsOptions::num_samples_for_weights	my-ivector-extractor.h	/^  int32 num_samples_for_weights;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorStatsOptions::update_variances	backup/my-ivector-extractor.h	/^  bool update_variances;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorStatsOptions::update_variances	my-ivector-extractor.h	/^  bool update_variances;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
kaldi::IvectorExtractorUpdateProjectionClass	backup/my-ivector-extractor.cc	/^class IvectorExtractorUpdateProjectionClass {$/;"	c	namespace:kaldi	file:
kaldi::IvectorExtractorUpdateProjectionClass	my-ivector-extractor.cc	/^class IvectorExtractorUpdateProjectionClass {$/;"	c	namespace:kaldi	file:
kaldi::IvectorExtractorUpdateProjectionClass::IvectorExtractorUpdateProjectionClass	backup/my-ivector-extractor.cc	/^  IvectorExtractorUpdateProjectionClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
kaldi::IvectorExtractorUpdateProjectionClass::IvectorExtractorUpdateProjectionClass	my-ivector-extractor.cc	/^  IvectorExtractorUpdateProjectionClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
kaldi::IvectorExtractorUpdateProjectionClass::extractor_	backup/my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::extractor_	my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::i_	backup/my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::i_	my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::impr_	backup/my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::impr_	my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::operator ()	backup/my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
kaldi::IvectorExtractorUpdateProjectionClass::operator ()	my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
kaldi::IvectorExtractorUpdateProjectionClass::opts_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::opts_	my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::stats_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::stats_	my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::tot_impr_	backup/my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::tot_impr_	my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
kaldi::IvectorExtractorUpdateProjectionClass::~IvectorExtractorUpdateProjectionClass	backup/my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateProjectionClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
kaldi::IvectorExtractorUpdateProjectionClass::~IvectorExtractorUpdateProjectionClass	my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateProjectionClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
kaldi::IvectorExtractorUpdateWeightClass	backup/my-ivector-extractor.cc	/^class IvectorExtractorUpdateWeightClass {$/;"	c	namespace:kaldi	file:
kaldi::IvectorExtractorUpdateWeightClass	my-ivector-extractor.cc	/^class IvectorExtractorUpdateWeightClass {$/;"	c	namespace:kaldi	file:
kaldi::IvectorExtractorUpdateWeightClass::IvectorExtractorUpdateWeightClass	backup/my-ivector-extractor.cc	/^  IvectorExtractorUpdateWeightClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
kaldi::IvectorExtractorUpdateWeightClass::IvectorExtractorUpdateWeightClass	my-ivector-extractor.cc	/^  IvectorExtractorUpdateWeightClass(const IvectorExtractorStats &stats,$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:(const IvectorExtractorStats &stats, const IvectorExtractorEstimationOptions &opts, int32 i, IvectorExtractor *extractor, double *tot_impr)
kaldi::IvectorExtractorUpdateWeightClass::extractor_	backup/my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::extractor_	my-ivector-extractor.cc	/^  IvectorExtractor *extractor_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::i_	backup/my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::i_	my-ivector-extractor.cc	/^  int32 i_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::impr_	backup/my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::impr_	my-ivector-extractor.cc	/^  double impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::operator ()	backup/my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
kaldi::IvectorExtractorUpdateWeightClass::operator ()	my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
kaldi::IvectorExtractorUpdateWeightClass::opts_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::opts_	my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::stats_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::stats_	my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::tot_impr_	backup/my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::tot_impr_	my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
kaldi::IvectorExtractorUpdateWeightClass::~IvectorExtractorUpdateWeightClass	backup/my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateWeightClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
kaldi::IvectorExtractorUpdateWeightClass::~IvectorExtractorUpdateWeightClass	my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateWeightClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
kaldi::IvectorExtractorUtteranceStats	backup/my-ivector-extractor.h	/^class IvectorExtractorUtteranceStats {$/;"	c	namespace:kaldi
kaldi::IvectorExtractorUtteranceStats	my-ivector-extractor.h	/^class IvectorExtractorUtteranceStats {$/;"	c	namespace:kaldi
kaldi::IvectorExtractorUtteranceStats::AccStats	backup/my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::AccStats($/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:( const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorUtteranceStats::AccStats	backup/my-ivector-extractor.h	/^  void AccStats(const MatrixBase<BaseFloat> &feats,$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorUtteranceStats::AccStats	my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::AccStats($/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:( const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorUtteranceStats::AccStats	my-ivector-extractor.h	/^  void AccStats(const MatrixBase<BaseFloat> &feats,$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(const MatrixBase<BaseFloat> &feats, const Posterior &post)
kaldi::IvectorExtractorUtteranceStats::IvectorExtractorUtteranceStats	backup/my-ivector-extractor.h	/^  IvectorExtractorUtteranceStats(int32 num_gauss, int32 feat_dim,$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(int32 num_gauss, int32 feat_dim, bool need_2nd_order_stats)
kaldi::IvectorExtractorUtteranceStats::IvectorExtractorUtteranceStats	my-ivector-extractor.h	/^  IvectorExtractorUtteranceStats(int32 num_gauss, int32 feat_dim,$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(int32 num_gauss, int32 feat_dim, bool need_2nd_order_stats)
kaldi::IvectorExtractorUtteranceStats::NumFrames	backup/my-ivector-extractor.h	/^  double NumFrames() { return gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:()
kaldi::IvectorExtractorUtteranceStats::NumFrames	my-ivector-extractor.h	/^  double NumFrames() { return gamma_.Sum(); }$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:()
kaldi::IvectorExtractorUtteranceStats::S_	backup/my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > S_; \/\/ 2nd-order stats, dimension [I][D][D], if$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
kaldi::IvectorExtractorUtteranceStats::S_	my-ivector-extractor.h	/^  std::vector<SpMatrix<double> > S_; \/\/ 2nd-order stats, dimension [I][D][D], if$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
kaldi::IvectorExtractorUtteranceStats::Scale	backup/my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::Scale(double scale) {$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:(double scale)
kaldi::IvectorExtractorUtteranceStats::Scale	backup/my-ivector-extractor.h	/^  void Scale(double scale); \/\/ Used to apply acoustic scale.$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(double scale)
kaldi::IvectorExtractorUtteranceStats::Scale	my-ivector-extractor.cc	/^void IvectorExtractorUtteranceStats::Scale(double scale) {$/;"	f	class:kaldi::IvectorExtractorUtteranceStats	signature:(double scale)
kaldi::IvectorExtractorUtteranceStats::Scale	my-ivector-extractor.h	/^  void Scale(double scale); \/\/ Used to apply acoustic scale.$/;"	p	class:kaldi::IvectorExtractorUtteranceStats	access:public	signature:(double scale)
kaldi::IvectorExtractorUtteranceStats::X_	backup/my-ivector-extractor.h	/^  Matrix<double> X_; \/\/ first-order stats, dimension [I][D]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
kaldi::IvectorExtractorUtteranceStats::X_	my-ivector-extractor.h	/^  Matrix<double> X_; \/\/ first-order stats, dimension [I][D]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
kaldi::IvectorExtractorUtteranceStats::gamma_	backup/my-ivector-extractor.h	/^  Vector<double> gamma_; \/\/ zeroth-order stats (summed posteriors), dimension [I]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
kaldi::IvectorExtractorUtteranceStats::gamma_	my-ivector-extractor.h	/^  Vector<double> gamma_; \/\/ zeroth-order stats (summed posteriors), dimension [I]$/;"	m	class:kaldi::IvectorExtractorUtteranceStats	access:public
kaldi::OnlineIvectorEstimationStats	backup/my-ivector-extractor.h	/^class OnlineIvectorEstimationStats {$/;"	c	namespace:kaldi
kaldi::OnlineIvectorEstimationStats	my-ivector-extractor.h	/^class OnlineIvectorEstimationStats {$/;"	c	namespace:kaldi
kaldi::OnlineIvectorEstimationStats::AccStats	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::AccStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
kaldi::OnlineIvectorEstimationStats::AccStats	backup/my-ivector-extractor.h	/^  void AccStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
kaldi::OnlineIvectorEstimationStats::AccStats	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::AccStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
kaldi::OnlineIvectorEstimationStats::AccStats	my-ivector-extractor.h	/^  void AccStats(const IvectorExtractor &extractor,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const IvectorExtractor &extractor, const VectorBase<BaseFloat> &feature, const std::vector<std::pair<int32, BaseFloat> > &gauss_post)
kaldi::OnlineIvectorEstimationStats::Count	backup/my-ivector-extractor.h	/^  double Count() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::Count	my-ivector-extractor.h	/^  double Count() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::DefaultObjf	backup/my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::DefaultObjf() const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:() const
kaldi::OnlineIvectorEstimationStats::DefaultObjf	backup/my-ivector-extractor.h	/^  double DefaultObjf() const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:() const
kaldi::OnlineIvectorEstimationStats::DefaultObjf	my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::DefaultObjf() const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:() const
kaldi::OnlineIvectorEstimationStats::DefaultObjf	my-ivector-extractor.h	/^  double DefaultObjf() const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:() const
kaldi::OnlineIvectorEstimationStats::GetIvector	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::GetIvector($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( int32 num_cg_iters, VectorBase<double> *ivector) const
kaldi::OnlineIvectorEstimationStats::GetIvector	backup/my-ivector-extractor.h	/^  void GetIvector(int32 num_cg_iters,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 num_cg_iters, VectorBase<double> *ivector) const
kaldi::OnlineIvectorEstimationStats::GetIvector	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::GetIvector($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( int32 num_cg_iters, VectorBase<double> *ivector) const
kaldi::OnlineIvectorEstimationStats::GetIvector	my-ivector-extractor.h	/^  void GetIvector(int32 num_cg_iters,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 num_cg_iters, VectorBase<double> *ivector) const
kaldi::OnlineIvectorEstimationStats::IvectorDim	backup/my-ivector-extractor.h	/^  int32 IvectorDim() const { return linear_term_.Dim(); }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::IvectorDim	my-ivector-extractor.h	/^  int32 IvectorDim() const { return linear_term_.Dim(); }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::NumFrames	backup/my-ivector-extractor.h	/^  double NumFrames() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::NumFrames	my-ivector-extractor.h	/^  double NumFrames() const { return num_frames_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::Objf	backup/my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::Objf($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::Objf	backup/my-ivector-extractor.h	/^  double Objf(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:(const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::Objf	my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::Objf($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::Objf	my-ivector-extractor.h	/^  double Objf(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:protected	signature:(const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::ObjfChange	backup/my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::ObjfChange($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::ObjfChange	backup/my-ivector-extractor.h	/^  double ObjfChange(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::ObjfChange	my-ivector-extractor.cc	/^double OnlineIvectorEstimationStats::ObjfChange($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::ObjfChange	my-ivector-extractor.h	/^  double ObjfChange(const VectorBase<double> &ivector) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const VectorBase<double> &ivector) const
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	backup/my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const OnlineIvectorEstimationStats &other)
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	backup/my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	backup/my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(const OnlineIvectorEstimationStats &other);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	backup/my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats($/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:( const OnlineIvectorEstimationStats &other)
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	my-ivector-extractor.cc	/^OnlineIvectorEstimationStats::OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(const OnlineIvectorEstimationStats &other);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
kaldi::OnlineIvectorEstimationStats::OnlineIvectorEstimationStats	my-ivector-extractor.h	/^  OnlineIvectorEstimationStats(int32 ivector_dim,$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(int32 ivector_dim, BaseFloat prior_offset, BaseFloat max_count)
kaldi::OnlineIvectorEstimationStats::PriorOffset	backup/my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::PriorOffset	my-ivector-extractor.h	/^  double PriorOffset() const { return prior_offset_; }$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:() const
kaldi::OnlineIvectorEstimationStats::Read	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::istream &is, bool binary)
kaldi::OnlineIvectorEstimationStats::Read	backup/my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::istream &is, bool binary)
kaldi::OnlineIvectorEstimationStats::Read	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Read(std::istream &is, bool binary) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::istream &is, bool binary)
kaldi::OnlineIvectorEstimationStats::Read	my-ivector-extractor.h	/^  void Read(std::istream &is, bool binary);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::istream &is, bool binary)
kaldi::OnlineIvectorEstimationStats::Scale	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Scale(double scale) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(double scale)
kaldi::OnlineIvectorEstimationStats::Scale	backup/my-ivector-extractor.h	/^  void Scale(double scale);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(double scale)
kaldi::OnlineIvectorEstimationStats::Scale	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Scale(double scale) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(double scale)
kaldi::OnlineIvectorEstimationStats::Scale	my-ivector-extractor.h	/^  void Scale(double scale);$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(double scale)
kaldi::OnlineIvectorEstimationStats::Write	backup/my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::ostream &os, bool binary) const
kaldi::OnlineIvectorEstimationStats::Write	backup/my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::ostream &os, bool binary) const
kaldi::OnlineIvectorEstimationStats::Write	my-ivector-extractor.cc	/^void OnlineIvectorEstimationStats::Write(std::ostream &os, bool binary) const {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	signature:(std::ostream &os, bool binary) const
kaldi::OnlineIvectorEstimationStats::Write	my-ivector-extractor.h	/^  void Write(std::ostream &os, bool binary) const;$/;"	p	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(std::ostream &os, bool binary) const
kaldi::OnlineIvectorEstimationStats::linear_term_	backup/my-ivector-extractor.h	/^  Vector<double> linear_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::linear_term_	my-ivector-extractor.h	/^  Vector<double> linear_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::max_count_	backup/my-ivector-extractor.h	/^  double max_count_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::max_count_	my-ivector-extractor.h	/^  double max_count_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::num_frames_	backup/my-ivector-extractor.h	/^  double num_frames_;  \/\/ num frames (weighted, if applicable).$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::num_frames_	my-ivector-extractor.h	/^  double num_frames_;  \/\/ num frames (weighted, if applicable).$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::operator =	backup/my-ivector-extractor.h	/^  inline OnlineIvectorEstimationStats &operator=(const OnlineIvectorEstimationStats &other) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
kaldi::OnlineIvectorEstimationStats::operator =	my-ivector-extractor.h	/^  inline OnlineIvectorEstimationStats &operator=(const OnlineIvectorEstimationStats &other) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
kaldi::OnlineIvectorEstimationStats::prior_offset_	backup/my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::prior_offset_	my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::quadratic_term_	backup/my-ivector-extractor.h	/^  SpMatrix<double> quadratic_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::OnlineIvectorEstimationStats::quadratic_term_	my-ivector-extractor.h	/^  SpMatrix<double> quadratic_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
kaldi::PCMData	backup/pcm-reader.h	/^class PCMData {$/;"	c	namespace:kaldi
kaldi::PCMData	pcm-reader.h	/^class PCMData {$/;"	c	namespace:kaldi
kaldi::PCMData::Clear	backup/pcm-reader.h	/^  void Clear() {$/;"	f	class:kaldi::PCMData	access:public	signature:()
kaldi::PCMData::Clear	pcm-reader.h	/^  void Clear() {$/;"	f	class:kaldi::PCMData	access:public	signature:()
kaldi::PCMData::CopyFrom	backup/pcm-reader.h	/^  void CopyFrom(const PCMData &other) {$/;"	f	class:kaldi::PCMData	access:public	signature:(const PCMData &other)
kaldi::PCMData::CopyFrom	pcm-reader.h	/^  void CopyFrom(const PCMData &other) {$/;"	f	class:kaldi::PCMData	access:public	signature:(const PCMData &other)
kaldi::PCMData::Data	backup/pcm-reader.h	/^  const Matrix<BaseFloat> &Data() const { return data_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
kaldi::PCMData::Data	pcm-reader.h	/^  const Matrix<BaseFloat> &Data() const { return data_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
kaldi::PCMData::Duration	backup/pcm-reader.h	/^  BaseFloat Duration() const { return data_.NumCols()\/samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
kaldi::PCMData::Duration	pcm-reader.h	/^  BaseFloat Duration() const { return data_.NumCols()\/samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
kaldi::PCMData::Expect4ByteTag	backup/pcm-reader.cc	/^void PCMData::Expect4ByteTag(std::istream &is, const char *expected) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, const char *expected)
kaldi::PCMData::Expect4ByteTag	backup/pcm-reader.h	/^  static void Expect4ByteTag(std::istream &is, const char *expected);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, const char *expected)
kaldi::PCMData::Expect4ByteTag	pcm-reader.cc	/^void PCMData::Expect4ByteTag(std::istream &is, const char *expected) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, const char *expected)
kaldi::PCMData::Expect4ByteTag	pcm-reader.h	/^  static void Expect4ByteTag(std::istream &is, const char *expected);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, const char *expected)
kaldi::PCMData::PCMData	backup/pcm-reader.h	/^  PCMData() : samp_freq_(0.0) {}$/;"	f	class:kaldi::PCMData	access:public	signature:()
kaldi::PCMData::PCMData	backup/pcm-reader.h	/^  PCMData(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)$/;"	f	class:kaldi::PCMData	access:public	signature:(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)
kaldi::PCMData::PCMData	pcm-reader.h	/^  PCMData() : samp_freq_(0.0) {}$/;"	f	class:kaldi::PCMData	access:public	signature:()
kaldi::PCMData::PCMData	pcm-reader.h	/^  PCMData(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)$/;"	f	class:kaldi::PCMData	access:public	signature:(BaseFloat samp_freq, const MatrixBase<BaseFloat> &data)
kaldi::PCMData::Read	backup/pcm-reader.cc	/^void PCMData::Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, long fileLen)
kaldi::PCMData::Read	backup/pcm-reader.h	/^  void Read(std::istream &is, long fileLen);$/;"	p	class:kaldi::PCMData	access:public	signature:(std::istream &is, long fileLen)
kaldi::PCMData::Read	pcm-reader.cc	/^void PCMData::Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, long fileLen)
kaldi::PCMData::Read	pcm-reader.h	/^  void Read(std::istream &is, long fileLen);$/;"	p	class:kaldi::PCMData	access:public	signature:(std::istream &is, long fileLen)
kaldi::PCMData::Read4ByteTag	backup/pcm-reader.cc	/^void PCMData::Read4ByteTag(std::istream &is, char *dest) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, char *dest)
kaldi::PCMData::Read4ByteTag	backup/pcm-reader.h	/^  static void Read4ByteTag(std::istream &is, char *dest);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, char *dest)
kaldi::PCMData::Read4ByteTag	pcm-reader.cc	/^void PCMData::Read4ByteTag(std::istream &is, char *dest) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, char *dest)
kaldi::PCMData::Read4ByteTag	pcm-reader.h	/^  static void Read4ByteTag(std::istream &is, char *dest);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, char *dest)
kaldi::PCMData::ReadUint16	backup/pcm-reader.cc	/^uint16 PCMData::ReadUint16(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
kaldi::PCMData::ReadUint16	backup/pcm-reader.h	/^  uint16 ReadUint16(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
kaldi::PCMData::ReadUint16	pcm-reader.cc	/^uint16 PCMData::ReadUint16(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
kaldi::PCMData::ReadUint16	pcm-reader.h	/^  uint16 ReadUint16(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
kaldi::PCMData::ReadUint32	backup/pcm-reader.cc	/^uint32 PCMData::ReadUint32(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
kaldi::PCMData::ReadUint32	backup/pcm-reader.h	/^  uint32 ReadUint32(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
kaldi::PCMData::ReadUint32	pcm-reader.cc	/^uint32 PCMData::ReadUint32(std::istream &is, bool swap) {$/;"	f	class:kaldi::PCMData	signature:(std::istream &is, bool swap)
kaldi::PCMData::ReadUint32	pcm-reader.h	/^  uint32 ReadUint32(std::istream &is, bool swap);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::istream &is, bool swap)
kaldi::PCMData::SampFreq	backup/pcm-reader.h	/^  BaseFloat SampFreq() const { return samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
kaldi::PCMData::SampFreq	pcm-reader.h	/^  BaseFloat SampFreq() const { return samp_freq_; }$/;"	f	class:kaldi::PCMData	access:public	signature:() const
kaldi::PCMData::Write	backup/pcm-reader.cc	/^void PCMData::Write(std::ostream &os) const {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os) const
kaldi::PCMData::Write	backup/pcm-reader.h	/^  void Write(std::ostream &os) const;$/;"	p	class:kaldi::PCMData	access:public	signature:(std::ostream &os) const
kaldi::PCMData::Write	pcm-reader.cc	/^void PCMData::Write(std::ostream &os) const {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os) const
kaldi::PCMData::Write	pcm-reader.h	/^  void Write(std::ostream &os) const;$/;"	p	class:kaldi::PCMData	access:public	signature:(std::ostream &os) const
kaldi::PCMData::WriteUint16	backup/pcm-reader.cc	/^void PCMData::WriteUint16(std::ostream &os, int16 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int16 i)
kaldi::PCMData::WriteUint16	backup/pcm-reader.h	/^  static void WriteUint16(std::ostream &os, int16 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int16 i)
kaldi::PCMData::WriteUint16	pcm-reader.cc	/^void PCMData::WriteUint16(std::ostream &os, int16 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int16 i)
kaldi::PCMData::WriteUint16	pcm-reader.h	/^  static void WriteUint16(std::ostream &os, int16 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int16 i)
kaldi::PCMData::WriteUint32	backup/pcm-reader.cc	/^void PCMData::WriteUint32(std::ostream &os, int32 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int32 i)
kaldi::PCMData::WriteUint32	backup/pcm-reader.h	/^  static void WriteUint32(std::ostream &os, int32 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int32 i)
kaldi::PCMData::WriteUint32	pcm-reader.cc	/^void PCMData::WriteUint32(std::ostream &os, int32 i) {$/;"	f	class:kaldi::PCMData	signature:(std::ostream &os, int32 i)
kaldi::PCMData::WriteUint32	pcm-reader.h	/^  static void WriteUint32(std::ostream &os, int32 i);$/;"	p	class:kaldi::PCMData	access:private	signature:(std::ostream &os, int32 i)
kaldi::PCMData::data_	backup/pcm-reader.h	/^  Matrix<BaseFloat> data_;$/;"	m	class:kaldi::PCMData	access:private
kaldi::PCMData::data_	pcm-reader.h	/^  Matrix<BaseFloat> data_;$/;"	m	class:kaldi::PCMData	access:private
kaldi::PCMData::kBlockSize	backup/pcm-reader.h	/^  static const uint32 kBlockSize = 1048576;  \/\/ 1024 * 1024, use 1M bytes$/;"	m	class:kaldi::PCMData	access:private
kaldi::PCMData::kBlockSize	pcm-reader.h	/^  static const uint32 kBlockSize = 1048576;  \/\/ 1024 * 1024, use 1M bytes$/;"	m	class:kaldi::PCMData	access:private
kaldi::PCMData::samp_freq_	backup/pcm-reader.h	/^  BaseFloat samp_freq_;$/;"	m	class:kaldi::PCMData	access:private
kaldi::PCMData::samp_freq_	pcm-reader.h	/^  BaseFloat samp_freq_;$/;"	m	class:kaldi::PCMData	access:private
kaldi::PCMHolder	backup/pcm-reader.h	/^class PCMHolder {$/;"	c	namespace:kaldi
kaldi::PCMHolder	pcm-reader.h	/^class PCMHolder {$/;"	c	namespace:kaldi
kaldi::PCMHolder::Clear	backup/pcm-reader.h	/^  void Clear() { t_.Clear(); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::Clear	pcm-reader.h	/^  void Clear() { t_.Clear(); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::Copy	backup/pcm-reader.h	/^  void Copy(const T &t) { t_.CopyFrom(t); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const T &t)
kaldi::PCMHolder::Copy	pcm-reader.h	/^  void Copy(const T &t) { t_.CopyFrom(t); }$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const T &t)
kaldi::PCMHolder::IsReadInBinary	backup/pcm-reader.h	/^  static bool IsReadInBinary() { return true; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::IsReadInBinary	pcm-reader.h	/^  static bool IsReadInBinary() { return true; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::PCMHolder	backup/pcm-reader.h	/^  PCMHolder() {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::PCMHolder	backup/pcm-reader.h	/^  PCMHolder(const PCMHolder &other): t_(other.t_) {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
kaldi::PCMHolder::PCMHolder	pcm-reader.h	/^  PCMHolder() {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::PCMHolder	pcm-reader.h	/^  PCMHolder(const PCMHolder &other): t_(other.t_) {}$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
kaldi::PCMHolder::Read	backup/pcm-reader.h	/^  bool Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::istream &is, long fileLen)
kaldi::PCMHolder::Read	pcm-reader.h	/^  bool Read(std::istream &is, long fileLen) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::istream &is, long fileLen)
kaldi::PCMHolder::T	backup/pcm-reader.h	/^  typedef PCMData T;$/;"	t	class:kaldi::PCMHolder	access:public
kaldi::PCMHolder::T	pcm-reader.h	/^  typedef PCMData T;$/;"	t	class:kaldi::PCMHolder	access:public
kaldi::PCMHolder::Value	backup/pcm-reader.h	/^  const T &Value() { return t_; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::Value	pcm-reader.h	/^  const T &Value() { return t_; }$/;"	f	class:kaldi::PCMHolder	access:public	signature:()
kaldi::PCMHolder::Write	backup/pcm-reader.h	/^  static bool Write(std::ostream &os, bool binary, const T &t) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::ostream &os, bool binary, const T &t)
kaldi::PCMHolder::Write	pcm-reader.h	/^  static bool Write(std::ostream &os, bool binary, const T &t) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(std::ostream &os, bool binary, const T &t)
kaldi::PCMHolder::fileLen	backup/pcm-reader.h	/^  long fileLen;$/;"	m	class:kaldi::PCMHolder	access:private
kaldi::PCMHolder::fileLen	pcm-reader.h	/^  long fileLen;$/;"	m	class:kaldi::PCMHolder	access:private
kaldi::PCMHolder::operator =	backup/pcm-reader.h	/^  PCMHolder &operator = (const PCMHolder &other) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
kaldi::PCMHolder::operator =	pcm-reader.h	/^  PCMHolder &operator = (const PCMHolder &other) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
kaldi::PCMHolder::t_	backup/pcm-reader.h	/^  T t_;$/;"	m	class:kaldi::PCMHolder	access:private
kaldi::PCMHolder::t_	pcm-reader.h	/^  T t_;$/;"	m	class:kaldi::PCMHolder	access:private
linear_term_	backup/my-ivector-extractor.h	/^  Vector<double> linear_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
linear_term_	my-ivector-extractor.h	/^  Vector<double> linear_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
max_count	backup/my-ivector-extractor.h	/^  double max_count;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
max_count	my-ivector-extractor.h	/^  double max_count;$/;"	m	struct:kaldi::IvectorEstimationOptions	access:public
max_count_	backup/my-ivector-extractor.h	/^  double max_count_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
max_count_	my-ivector-extractor.h	/^  double max_count_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
num_frames_	backup/my-ivector-extractor.h	/^  double num_frames_;  \/\/ num frames (weighted, if applicable).$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
num_frames_	my-ivector-extractor.h	/^  double num_frames_;  \/\/ num frames (weighted, if applicable).$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
num_iters	backup/my-ivector-extractor.h	/^  int num_iters;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
num_iters	my-ivector-extractor.h	/^  int num_iters;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
num_ivectors_	backup/my-ivector-extractor.h	/^  double num_ivectors_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
num_ivectors_	my-ivector-extractor.h	/^  double num_ivectors_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
num_samples_for_weights	backup/my-ivector-extractor.h	/^  int32 num_samples_for_weights;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
num_samples_for_weights	my-ivector-extractor.h	/^  int32 num_samples_for_weights;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
num_threads	backup/my-ivector-extractor.h	/^  int32 num_threads;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
num_threads	my-ivector-extractor.h	/^  int32 num_threads;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
operator ()	backup/my-init-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:()
operator ()	backup/my-ivector-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:()
operator ()	backup/my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
operator ()	backup/my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
operator ()	my-init-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::InitIvectorExtractorComputeDerivedVarsClass	access:public	signature:()
operator ()	my-ivector-extractor.cc	/^  void operator () () { extractor_->ComputeDerivedVars(i_); }$/;"	f	class:kaldi::IvectorExtractorComputeDerivedVarsClass	access:public	signature:()
operator ()	my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
operator ()	my-ivector-extractor.cc	/^  void operator () () {$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
operator =	backup/my-ivector-extractor.h	/^  IvectorExtractorStats &operator = (const IvectorExtractorStats &other);  \/\/ Disallow.$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const IvectorExtractorStats &other)
operator =	backup/my-ivector-extractor.h	/^  inline OnlineIvectorEstimationStats &operator=(const OnlineIvectorEstimationStats &other) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
operator =	backup/pcm-reader.h	/^  PCMHolder &operator = (const PCMHolder &other) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
operator =	my-ivector-extractor.h	/^  IvectorExtractorStats &operator = (const IvectorExtractorStats &other);  \/\/ Disallow.$/;"	p	class:kaldi::IvectorExtractorStats	access:private	signature:(const IvectorExtractorStats &other)
operator =	my-ivector-extractor.h	/^  inline OnlineIvectorEstimationStats &operator=(const OnlineIvectorEstimationStats &other) {$/;"	f	class:kaldi::OnlineIvectorEstimationStats	access:public	signature:(const OnlineIvectorEstimationStats &other)
operator =	pcm-reader.h	/^  PCMHolder &operator = (const PCMHolder &other) {$/;"	f	class:kaldi::PCMHolder	access:public	signature:(const PCMHolder &other)
opts_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
opts_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
opts_	my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
opts_	my-ivector-extractor.cc	/^  const IvectorExtractorEstimationOptions &opts_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
pcm_data_read	backup/sre.h	/^		bool pcm_data_read();$/;"	p	class:SRE	access:public	signature:()
pcm_data_read	backup/sre.h	/^bool SRE<DataType>::pcm_data_read() {$/;"	f	class:SRE	signature:()
pcm_data_read	sre.h	/^		bool pcm_data_read();$/;"	p	class:SRE	access:public	signature:()
pcm_data_read	sre.h	/^bool SRE<DataType>::pcm_data_read() {$/;"	f	class:SRE	signature:()
post_	backup/sre.h	/^		Posterior post_;$/;"	m	class:SRE	access:private
post_	my-cuda-ivector-extractor.h	/^		Posterior post_;$/;"	m	class:CudaIE	access:private
post_	sre.h	/^		Posterior post_;$/;"	m	class:SRE	access:private
print_matrix	backup/sre.h	/^static void print_matrix(Matrix<T> _matrix) {$/;"	f	signature:(Matrix<T> _matrix)
print_matrix	sre.h	/^static void print_matrix(Matrix<T> _matrix) {$/;"	f	signature:(Matrix<T> _matrix)
print_std_vector	backup/sre.h	/^static void print_std_vector(std::vector<T> vec) {$/;"	f	signature:(std::vector<T> vec)
print_std_vector	sre.h	/^static void print_std_vector(std::vector<T> vec) {$/;"	f	signature:(std::vector<T> vec)
print_vector	backup/sre.h	/^static void print_vector(Vector<T> _vector) {$/;"	f	signature:(Vector<T> _vector)
print_vector	sre.h	/^static void print_vector(Vector<T> _vector) {$/;"	f	signature:(Vector<T> _vector)
prior_offset_	backup/my-init-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
prior_offset_	backup/my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::IvectorExtractor	access:public
prior_offset_	backup/my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
prior_offset_	my-cuda-ivector-extractor.h	/^		double prior_offset_;$/;"	m	class:CudaIE	access:private
prior_offset_	my-init-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
prior_offset_	my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::IvectorExtractor	access:public
prior_offset_	my-ivector-extractor.h	/^  double prior_offset_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
prior_stats_lock_	backup/my-ivector-extractor.h	/^  Mutex prior_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
prior_stats_lock_	my-ivector-extractor.h	/^  Mutex prior_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
quadratic_term_	backup/my-ivector-extractor.h	/^  SpMatrix<double> quadratic_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
quadratic_term_	my-ivector-extractor.h	/^  SpMatrix<double> quadratic_term_;$/;"	m	class:kaldi::OnlineIvectorEstimationStats	access:protected
samp_freq_	backup/pcm-reader.h	/^  BaseFloat samp_freq_;$/;"	m	class:kaldi::PCMData	access:private
samp_freq_	pcm-reader.h	/^  BaseFloat samp_freq_;$/;"	m	class:kaldi::PCMData	access:private
sph_scp	backup/sre.h	/^		std::pair<std::string, std::string> sph_scp;$/;"	m	class:SRE	access:public
sph_scp	sre.h	/^		std::pair<std::string, std::string> sph_scp;$/;"	m	class:SRE	access:public
spk2utt	backup/sre.h	/^		std::pair<std::string, std::string> spk2utt;$/;"	m	class:SRE	access:public
spk2utt	sre.h	/^		std::pair<std::string, std::string> spk2utt;$/;"	m	class:SRE	access:public
stats_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
stats_	backup/my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
stats_	my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
stats_	my-ivector-extractor.cc	/^  const IvectorExtractorStats &stats_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
t_	backup/pcm-reader.h	/^  T t_;$/;"	m	class:kaldi::PCMHolder	access:private
t_	pcm-reader.h	/^  T t_;$/;"	m	class:kaldi::PCMHolder	access:private
tot_auxf_	backup/my-ivector-extractor.h	/^  double tot_auxf_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
tot_auxf_	my-ivector-extractor.h	/^  double tot_auxf_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
tot_impr_	backup/my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
tot_impr_	backup/my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
tot_impr_	my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateProjectionClass	file:	access:private
tot_impr_	my-ivector-extractor.cc	/^  double *tot_impr_;$/;"	m	class:kaldi::IvectorExtractorUpdateWeightClass	file:	access:private
update_variances	backup/my-ivector-extractor.h	/^  bool update_variances;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
update_variances	my-ivector-extractor.h	/^  bool update_variances;$/;"	m	struct:kaldi::IvectorExtractorStatsOptions	access:public
use_weights	backup/my-ivector-extractor.h	/^  bool use_weights;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
use_weights	my-ivector-extractor.h	/^  bool use_weights;$/;"	m	struct:kaldi::IvectorExtractorOptions	access:public
utt2spk	backup/sre.h	/^		std::pair<std::string, std::string> utt2spk;$/;"	m	class:SRE	access:public
utt2spk	sre.h	/^		std::pair<std::string, std::string> utt2spk;$/;"	m	class:SRE	access:public
vad_result_	backup/sre.h	/^		Vector<BaseFloat> vad_result_;$/;"	m	class:SRE	access:private
vad_result_	sre.h	/^		Vector<BaseFloat> vad_result_;$/;"	m	class:SRE	access:private
variance_floor_factor	backup/my-ivector-extractor.h	/^  double variance_floor_factor;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
variance_floor_factor	my-ivector-extractor.h	/^  double variance_floor_factor;$/;"	m	struct:kaldi::IvectorExtractorEstimationOptions	access:public
variance_stats_lock_	backup/my-ivector-extractor.h	/^  Mutex variance_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
variance_stats_lock_	my-ivector-extractor.h	/^  Mutex variance_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
w_	backup/my-init-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
w_	backup/my-ivector-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::IvectorExtractor	access:public
w_	my-cuda-ivector-extractor.h	/^		CuMatrix<double> w_;$/;"	m	class:CudaIE	access:private
w_	my-init-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
w_	my-ivector-extractor.h	/^  Matrix<double> w_;$/;"	m	class:kaldi::IvectorExtractor	access:public
w_vec_	backup/my-init-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
w_vec_	backup/my-ivector-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::IvectorExtractor	access:public
w_vec_	my-cuda-ivector-extractor.h	/^		CuVector<double> w_vec_;$/;"	m	class:CudaIE	access:private
w_vec_	my-init-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::InitIvectorExtractor	access:public
w_vec_	my-ivector-extractor.h	/^  Vector<double> w_vec_;$/;"	m	class:kaldi::IvectorExtractor	access:public
wav_data_read	backup/sre.h	/^		bool wav_data_read();$/;"	p	class:SRE	access:public	signature:()
wav_data_read	backup/sre.h	/^bool SRE<DataType>::wav_data_read() {$/;"	f	class:SRE	signature:()
wav_data_read	sre.h	/^		bool wav_data_read();$/;"	p	class:SRE	access:public	signature:()
wav_data_read	sre.h	/^bool SRE<DataType>::wav_data_read() {$/;"	f	class:SRE	signature:()
wav_scp	backup/sre.h	/^		std::pair<std::string, std::string> wav_scp;$/;"	m	class:SRE	access:public
wav_scp	sre.h	/^		std::pair<std::string, std::string> wav_scp;$/;"	m	class:SRE	access:public
weight_stats_lock_	backup/my-ivector-extractor.h	/^  Mutex weight_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
weight_stats_lock_	my-ivector-extractor.h	/^  Mutex weight_stats_lock_;$/;"	m	class:kaldi::IvectorExtractorStats	access:protected
~CudaIE	my-cuda-ivector-extractor.h	/^		~CudaIE() {}$/;"	f	class:CudaIE	access:public	signature:()
~IvectorExtractorUpdateProjectionClass	backup/my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateProjectionClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
~IvectorExtractorUpdateProjectionClass	my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateProjectionClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateProjectionClass	access:public	signature:()
~IvectorExtractorUpdateWeightClass	backup/my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateWeightClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
~IvectorExtractorUpdateWeightClass	my-ivector-extractor.cc	/^  ~IvectorExtractorUpdateWeightClass() { *tot_impr_ += impr_; }$/;"	f	class:kaldi::IvectorExtractorUpdateWeightClass	access:public	signature:()
